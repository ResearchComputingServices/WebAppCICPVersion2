%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 86 499 337 567 
%%LanguageLevel: 2
%%Creator: CorelDRAW X8
%%Title: logo_h.eps
%%CreationDate: Sat May 13 15:24:30 2023
%%DocumentProcessColors: Magenta Yellow Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/DocPsLevel 2 def
%Build: CorelDRAW X8 Version 18.1.0.661
/EpsFile true def
%%BeginResource: procset wCorel18Dict 18.0 0
/wCorel18Dict 300 dict def wCorel18Dict begin
%----------------------------------------------------------------------------
% Core Corel PostScript prolog functions
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/rp{{pop}repeat}bd/dexec{
exch begin cvx exec end}bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np
/newpath ld/Tl/translate ld/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd
/spg/showpage ld/showpage{}bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf
xd/$sdf false def/$SDF false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0
eq{$dsf 3 1 roll 4 -1 roll pop}if exch $Scra add exch load SetScr}bd
/SeparationMode where{pop}{/SeparationMode/Composite def}ifelse
/SeparationPlateName where{pop}{/SeparationPlateName null def}ifelse
/SeparateInColor where{pop}{/SeparateInColor false def}ifelse/EpsFile where
{pop}{/EpsFile false def}ifelse/FillOverprint false def/$fil 0 def
/OutlineOverprint 0 def/$PF false def/$bkg false def/CurrentOverprint false def
matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def/$stm matrix def
/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent
16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/get_ps_level/languagelevel where{pop systemdict/languagelevel get exec}{1}
ifelse def/Level2 get_ps_level 2 ge def/Level3 get_ps_level 3 ge def
/AdobeDistiller/product where{pop systemdict/setdistillerparams known product
(Adobe PostScript Parser)ne and}{false}ifelse def/InRipSeparation
AdobeDistiller{false}{Level2{currentpagedevice/Separations 2 copy known{get}{
pop pop false}ifelse}{false}ifelse}ifelse def/ColorSeparationLevel1 1 0 0 0
gsave setcmykcolor currentcmykcolor grestore add add add 0 ne 0 1 0 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 1 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 0 1 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne and and and not def
/ColorSeparation/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{
InRipSeparation{true}{ColorSeparationLevel1}ifelse}ifelse}ifelse def
/IsColorDevice/deviceinfo where{pop deviceinfo/Colors known{deviceinfo/Colors
get exec 1 gt}{false}ifelse}{/statusdict where{pop statusdict/processcolors
known{statusdict/processcolors get exec 1 gt}{false}ifelse}{false}ifelse}
ifelse def/get_simulate_devicen get_ps_level 2 eq{{SeparationMode/OnHost ne
InRipSeparation AdobeDistiller or and}bind}{false}ifelse def/DocGrayScaleSpace
[/DeviceGray]def/DocRgbSpace[/DeviceRGB]def/DocCmykSpace[/DeviceCMYK]def
/DocLabSpace[/CIEBasedABC <</BlackPoint[0 0 0]/WhitePoint[0.9637 1.0000 0.8241
]/RangeABC[0 100 -128 127 -128 127]/DecodeABC[{16 add 116 div}bind{500 div}
bind{200 div}bind]/MatrixABC[1 1 1 1 0 0 0 0 -1]/DecodeLMN[{dup 0.206897 ge{dup
dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.9637 mul}bind{dup 0.206897
ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 1.0000 mul}bind{dup
0.206897 ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.8241 mul}bind]
>>]def/validate_cie_colorspace_whitepoint{load dup aload pop/WhitePoint get 1
1.0 put pop}bd/set_cie_colorspaces{/DocGrayScaleSpaceCIE where{pop
/DocGrayScaleSpaceCIE validate_cie_colorspace_whitepoint/DocGrayScaleSpace xd
DocGrayScaleSpace aload pop begin pop/DecodeA where{pop DecodeA type/arraytype
eq{DecodeA aload pop/DecodeA exch def}if}if end}if/DocRgbSpaceCIE where{pop
/DocRgbSpaceCIE validate_cie_colorspace_whitepoint/DocRgbSpace xd}if
/DocCmykSpaceCIE where{pop/DocCmykSpaceCIE validate_cie_colorspace_whitepoint
/DocCmykSpace xd}if}bd/set_rendering_intent{Level3{findcolorrendering{
/ColorRendering findresource setcolorrendering}{dup/DefaultColorRendering eq{
pop}{/ColorRendering findresource setcolorrendering}}ifelse}{pop}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}def}ifelse
/setcustomcolor where SeparationMode/OnHost ne and{pop}{/tint_cmyk_color{5 -1
roll dup 1 ge{pop}{4{dup 6 -1 roll mul exch}repeat pop}ifelse}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{SepsColor not{4 1 roll pop pop pop
1 exch sub SetGry}{SetCmyk_5}ifelse}ifelse}bd/setcustomcolor{exch aload pop
SepMode_5 0 eq{pop tint_cmyk_color setprocesscolor_5}{CurrentInkName_5 eq{4
index}{0}ifelse 6 1 roll 5 rp 1 sub neg SetGry}ifelse}bd}ifelse
/convert_rgb_to_cmyk{dup type/dicttype eq{}{3{1 exch sub 3 1 roll}repeat 3 copy
min min 3{dup 5 -1 roll sub neg exch}repeat}ifelse}bd/safe_setcolorspace{dup
currentcolorspace eq{pop}{setcolorspace}ifelse}bd/safe_setoverprint{dup type
/booleantype eq{dup currentoverprint ne{setoverprint}{pop}ifelse}{1 eq
setoverprint}ifelse}bd/is_cmyk_channel_name{/channel_name xd channel_name/Cyan
eq channel_name/Magenta eq or channel_name/Yellow eq or channel_name/Black eq
or{true}{false}ifelse}bd/is_rgb_channel_name{/channel_name xd channel_name/Red
eq channel_name/Green eq or channel_name/Blue eq or{true}{false}ifelse}bd
/is_spot_channel_name{/channel_name xd channel_name is_cmyk_channel_name
channel_name is_rgb_channel_name or channel_name/Gray eq or{false}{true}ifelse
}bd/spot_tint_transform_proc{/alternativeSpace xd/alternativeColors xd/tint xd
alternativeSpace DocLabSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3
def}{alternativeSpace DocCmykSpace eq{/mixMethod/Subtractive def
/altSpaceNumChannels 4 def}{alternativeSpace DocRgbSpace eq{/mixMethod
/Additive def/altSpaceNumChannels 3 def}{alternativeSpace DocGrayScaleSpace eq
{/mixMethod/Additive def/altSpaceNumChannels 1 def}if}ifelse}ifelse}ifelse
alternativeSpace DocLabSpace eq{alternativeColors aload pop tint mul 3 1 roll
tint mul 3 1 roll dup 100 exch sub 1 tint sub mul add 3 1 roll}{/tintedColor
altSpaceNumChannels{0.0}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def alternativeColors
altChannelIndex get mixMethod/Additive eq{1.0 exch sub tint mul 1.0 exch sub}{
tint mul}ifelse tintedColor altChannelIndex 3 2 roll put}for tintedColor aload
pop}ifelse}bd/devicen_colorant_mixer_proc{/numChannels xd/alternativeSpace xd
/channelNames xd/alternativeColors xd numColorants array astore/colorants xd
/is_spot_channel_name_loc{is_spot_channel_name}bind def alternativeSpace
DocCmykSpace eq{/mixMethod/Subtractive def/altSpaceNumChannels 4 def
/is_spot_channel_name_loc{is_cmyk_channel_name not}bind def}{alternativeSpace
DocRgbSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3 def
/is_spot_channel_name_loc{is_rgb_channel_name not}bind def}{alternativeSpace
DocGrayScaleSpace eq{/mixMethod/Additive def/altSpaceNumChannels 1 def
/is_spot_channel_name_loc{/Gray ne}bind def}if}ifelse}ifelse mixMethod
/Additive eq{/mixedColor altSpaceNumChannels{0.0}repeat altSpaceNumChannels
array astore def/bProcessPlateTinted false def 0 1 numChannels 1 sub{
/channelIndex exch def channelNames channelIndex get is_spot_channel_name_loc
/bSpotChannel xd/sourceChannel colorants channelIndex get def/bWhiteBackground
0 mixedColor{add}forall altSpaceNumChannels div 0.999 gt bProcessPlateTinted
and def bSpotChannel bProcessPlateTinted not and{/bSpotChannel false def}if 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def/mixedChannel mixedColor
altChannelIndex get def sourceChannel alternativeColors channelIndex get
altChannelIndex get 1.0 exch sub mul 1.0 exch sub dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if bSpotChannel{sourceChannel 0.0 gt{mixedChannel mul}{pop
mixedChannel}ifelse}{/bProcessPlateTinted true def globaldict begin
/bSkipDeviceNImage where{pop false}{true}ifelse end DevicenImage and{pop
sourceChannel alternativeColors channelIndex get altChannelIndex get mul
mixedChannel add}{mixedChannel add}ifelse}ifelse dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if mixedColor altChannelIndex 3 2 roll put}for}for}{/mixedColor
altSpaceNumChannels{1}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/targetIndex exch def 0 1 numColorants 1 sub{
/sourceIndex exch def colorants sourceIndex get alternativeColors sourceIndex
get targetIndex get mul 1 exch sub mixedColor targetIndex get mul mixedColor
targetIndex 3 2 roll put}for mixedColor targetIndex 1 mixedColor targetIndex
get sub put}for}ifelse mixedColor aload pop}bd/ColorSpec 9 dict begin/color[]
def/names[]def/num 0 def/ColorModel null def/ColorSpace[]def/set_color{
ColorSeparationLevel1{convert_to_cmyk/color get aload pop setcmykcolor}{
ColorSpace safe_setcolorspace color aload pop setcolor}ifelse}bd
/separate_set_color{SeparationMode/OnHost eq{separate_color{/set_color dexec
true}{pop currentoverprint{false}{SeparateInColor{0 0 0 0 SetCmyk_5 true}{1
SetGry true}ifelse}ifelse}ifelse}{set_color true}ifelse}bd/separate_color{
currentdict false}bd/convert_to_cmyk{currentdict}bd currentdict end def
/GrayscaleColorSpec ColorSpec 9 dict copy begin/names{/Black}def/num 1 def
/ColorModel/Grayscale def/ColorSpace DocGrayScaleSpace def/separate_color{
currentdict false SeparationMode/OnHost eq{SeparationPlateName/Black eq{
SeparateInColor{pop convert_to_cmyk true}{pop true}ifelse}if}if}bd
/convert_to_cmyk{0 0 0 color aload pop 1 exch sub create_cmyk_color}bd
currentdict end def/create_grayscale_color{GrayscaleColorSpec 9 dict copy begin
/color exch 1 array astore def/ColorSpace DocGrayScaleSpace def currentdict end
}bd/RgbColorSpec ColorSpec 9 dict copy begin/names{/Red/Green/Blue}def/num 3
def/ColorModel/Rgb def/ColorSpace DocRgbSpace def/separate_color{
convert_to_cmyk/separate_color dexec}bd/convert_to_cmyk{color aload pop
convert_rgb_to_cmyk create_cmyk_color}bd currentdict end def/create_rgb_color{
RgbColorSpec 9 dict copy begin 3 array astore/color exch def/ColorSpace
DocRgbSpace def currentdict end}bd/HsbColorSpec ColorSpec 9 dict copy begin
/names{/Hue/Saturation/Brightness}def/num 3 def/ColorModel/Hsb def/ColorSpace
DocRgbSpace def/separate_color{convert_to_cmyk/separate_color dexec}bd
/convert_to_cmyk{color aload pop hsb2rgb convert_rgb_to_cmyk create_cmyk_color
}bd/convert_to_rgb{color aload pop hsb2rgb create_rgb_color}bd currentdict end
def/create_hsb_color{HsbColorSpec 9 dict copy begin 3 array astore/color exch
def/ColorSpace DocRgbSpace def currentdict end}bd/CmykColorSpec ColorSpec 9
dict copy begin/names{/Cyan/Magenta/Yellow/Black}def/num 4 def/ColorModel/Cmyk
def/ColorSpace DocCmykSpace def/separate_color{currentdict false
SeparationPlateIndex 0 ge SeparationPlateIndex 3 le and{color
SeparationPlateIndex get dup 0 gt{3 1 roll pop pop SeparateInColor{0 0 0 4
SeparationPlateIndex roll create_cmyk_color true}{1 exch sub
create_grayscale_color true}ifelse}{pop}ifelse}if}bd/convert_to_cmyk{
currentdict}bd currentdict end def/create_cmyk_color{CmykColorSpec 9 dict copy
begin 4 array astore/color exch def/ColorSpace DocCmykSpace def currentdict end
}bd/SpotColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel/Spot def
/set_color{ColorSeparationLevel1{color aload pop get_cmyk_alternative_color
/color get aload pop names aload pop findcmykcustomcolor exch setcustomcolor}{
ColorSpace safe_setcolorspace color aload pop setcolor}ifelse}bd
/separate_color{currentdict false SeparationPlateIndex 4 eq{names aload pop
SeparationPlateName eq{color aload pop dup 0 gt{3 1 roll pop pop
SeparateInColor{pop convert_to_cmyk true}{1 exch sub create_grayscale_color
true}ifelse}{pop}ifelse}if}if}bd/convert_to_cmyk{/alternativeSpace ColorSpace 2
get def/tintTransformProc ColorSpace 3 get def alternativeSpace DocCmykSpace eq
{color aload pop tintTransformProc create_cmyk_color}{alternativeSpace
DocRgbSpace eq{color aload pop tintTransformProc create_rgb_color
/convert_to_cmyk dexec}{alternativeSpace DocGrayScaleSpace eq{0 0 0 color aload
pop 1 sub create_cmyk_color}{0 0 0 1 create_cmyk_color}ifelse}ifelse}ifelse}bd
/get_cmyk_alternative_color{/alternativeSpace ColorSpace 2 get def
alternativeSpace DocCmykSpace eq{alternativeColor aload pop create_cmyk_color}
{alternativeSpace DocRgbSpace eq{alternativeColor aload pop create_rgb_color
/convert_to_cmyk dexec}{alternativeSpace DocGrayScaleSpace eq{alternativeColor
aload pop create_grayscale_color/convert_to_cmyk dexec}{0 0 0 1
create_cmyk_color}ifelse}ifelse}ifelse}bd currentdict end def
/create_spot_colorspace{load/alternativeSpace xd/alternativeColor xd/name xd[
/Separation name alternativeSpace[alternativeColor alternativeSpace
/spot_tint_transform_proc cvx]cvx]}bd/create_spot_color{SpotColorSpec 9 dict
copy begin dup type/arraytype ne{create_spot_colorspace}if/ColorSpace xd/color
exch 1 array astore def ColorSpace 1 get 1 array astore/names xd currentdict
end}bd/DevicenColorSpec SpotColorSpec 9 dict copy begin/ColorModel/DeviceN def
/set_color{Level3{ColorSpace safe_setcolorspace color aload pop setcolor}{
ColorSpace 2 get setcolorspace color aload pop ColorSpace 3 get exec setcolor}
ifelse}bd/separate_color{currentdict false/PlateIndex -1 def 0 1 num 1 sub{dup
names exch get SeparationPlateName eq{/PlateIndex xd exit}if pop}for PlateIndex
0 ge{color PlateIndex get dup 0 gt{SeparateInColor{num 1 sub{0}repeat num
PlateIndex roll ColorSpace create_devicen_color/convert_to_cmyk dexec true}{1
exch sub create_grayscale_color true}ifelse 4 2 roll pop pop}{pop}ifelse}if}bd
/get_ink_as_spot{dup/indexInk xd dup color exch get exch names exch get[1.0 num
1 sub{0}repeat num indexInk roll ColorSpace 3 get exec]ColorSpace 2 get
create_spot_color}bd currentdict end def/create_devicen_colorspace{
/numColorants xd load/alternativeSpace xd bind/tintTransform exch def/names xd
[/DeviceN names alternativeSpace/tintTransform load]}bd/create_devicen_color{
DevicenColorSpec 9 dict copy begin dup type/arraytype ne{
create_devicen_colorspace}if/ColorSpace xd/num ColorSpace 1 get length def
/names ColorSpace 1 get def num array astore/color xd currentdict end}bd
/RegistrationColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel
/Registration def/ColorSpace{[/Separation/All DocCmykSpace{dup dup dup}]}def
/names[/All]def/set_color{ColorSeparationLevel1{DocGrayScaleSpace
safe_setcolorspace color aload pop 1 exch sub setcolor}{ColorSpace
safe_setcolorspace color aload pop setcolor}ifelse}bd/separate_color{
SeparateInColor{convert_to_cmyk true}{color aload pop 1 exch sub
create_grayscale_color true}ifelse}bd/convert_to_cmyk{color aload pop dup dup
dup create_cmyk_color}bd currentdict end def/create_registration_color{
RegistrationColorSpec 9 dict copy begin 1 array astore/color xd currentdict end
}bd/LabColorSpec ColorSpec 9 dict copy begin/names{/L/a/b}def/num 3 def
/ColorModel/Lab def/ColorSpace DocLabSpace def/separate_color{convert_to_cmyk
/separate_color dexec}bd/convert_to_cmyk{0 0 0 0 create_cmyk_color}bd
currentdict end def/create_lab_color{LabColorSpec 9 dict copy begin 3 array
astore/color exch def/ColorSpace DocLabSpace def currentdict end}bd
/set_solid_fill{/FillColor xd/$fil 0 def}bd/set_outline{/OutlineColor xd}bd
/CheckLevelCompatibility{/DocPsLevel where{pop DocPsLevel get_ps_level gt{@np
/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level of Corel document is higher than the PostScript)show 72
132 m(level of this device. Change the PS Level in the Corel application)show
72 120 m(by selecting the PostScript tab in the print dialog, and selecting)
show 72 108 m(document level from the Compatibility drop down list.)show flush
spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known{systemdict
/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd/AutoFlatness where{pop
AutoFlatness{/@ifl{dup currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if}if/@ssa Level2{{true
setstrokeadjust}}{{}}ifelse bd/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M
/setmiterlimit ld/w/setlinewidth ld/O{/FillOverprint xd}bd/R{/OutlineOverprint
xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l/lineto ld/L/l ld/rl/rlineto ld/m
/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld
/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1 exch sub 0 0 0 4 roll 3
create_cmyk_color set_solid_fill/$fil 0 def}bd/G{1 sub neg 0 0 0 4 -1 roll
create_cmyk_color set_outline}bd/i{dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll
2 copy 6 -2 roll c}bd/V/v ld/y{2 copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd
matrix scale $ptm dup concatmatrix/$ptm xd 1 eq{$ptm exch dup concatmatrix
/$ptm xd}if/patternScallingMatrix where{pop patternScallingMatrix $ptm matrix
concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd{/$scp xd/$sca xd/$scf xd}if
}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}if}bd/@D{2 index 0 eq{$dsf 3 1
roll 4 -1 roll pop}if 3 copy exch $Scra add exch load SetScr/$dsp xd/$dsa xd
/$dsf xd}bd/$ngx{$SDF{$SCF SeparationMode/Composite eq{$SCA}{$dsa}ifelse $SCP
@ss}if}bd/min{2 copy le{pop}{exch pop}ifelse}bd/max{2 copy ge{pop}{exch pop}
ifelse}bd/in_range{3 -1 roll min max}bd/InRange/in_range load bd/@sqr{dup 0 rl
dup 0 exch rl neg 0 rl @cp}bd/currentscale{1 0 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt 0 1 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup
3 -1 roll eq{1 add}if}bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch
pop abs 1 exch sub}bd/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}
if exch}repeat pop}bd/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy min min 3{
dup 5 -1 roll sub neg exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul
add 1 index .114 mul add 4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{
/CorelImage systemdict/image get def/CorelSetGray systemdict/setgray get def
/CorelGetGray systemdict/currentgray get def/CorelSetTransfer systemdict
/settransfer get def/CorelGetTransfer systemdict/currenttransfer get def
/SetRgb/setrgbcolor ld/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry
/currentgray ld/SetRgb2 systemdict/setrgbcolor get def/GetRgb2 systemdict
/currentrgbcolor get def/SetHsb systemdict/sethsbcolor get def/GetHsb
systemdict/currenthsbcolor get def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll
dup floor sub 3 1 roll SetHsb GetRgb2}bd/setcmykcolor where{pop/LumSepsDict
where{pop/SetCmyk_5{LumSepsDict/setcmykcolor get exec}def}{/AldusSepsDict where
{pop/SetCmyk_5{AldusSepsDict/setcmykcolor get exec}def}{/SetCmyk_5
/setcmykcolor ld}ifelse}ifelse}{/setcmykcolor{create_cmyk_color
/separate_set_color dexec/$ffpnt xd}bd/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse
/currentcmykcolor where{pop/GetCmyk/currentcmykcolor ld}{/GetCmyk{GetRgb
rgb2cmyk}bd}ifelse/setoverprint where{pop}{/setoverprint{/CurrentOverprint xd}
bd}ifelse/currentoverprint where{pop}{/currentoverprint{CurrentOverprint}bd}
ifelse/colorimage where{pop/ColorImage{colorimage}def}{/ColorImage{/ncolors xd
/$multi xd $multi true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch
pop abs{daqR pop daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop
pop exch pop abs{daqC pop daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd
{dataaq ncolors dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv
getinterval pop}{4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
$dat 4 index 3 add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1
roll put}for $dat 0 $dat length ncolors idiv getinterval}if}ifelse}image}
ifelse}bd}ifelse/currentcmykcolor{GetCmyk}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SeparationMode/Composite eq{IMAGE}{dup
type/dicttype eq{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8
eq exch/BitsPerComponent get 1 eq or currentcolorspace 0 get DocGrayScaleSpace
eq and{SeparationPlateName(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get
abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{
SeparationPlateName(Black)eq{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}
repeat}ifelse}{IMAGE}ifelse}ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/$fm 0
def/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SeparationMode/Composite eq{
true}{$Psc 0 ne or $ink_5 3 eq or}ifelse{0 J 0 j[]0 d FillOverprint
safe_setoverprint FillColor/separate_set_color dexec pop $ctm setmatrix 72 1000
div dup matrix scale dup concat dup Bburx exch Bbury exch itransform ceiling
cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform floor cvi
/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry wfill}
ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if
FillOverprint safe_setoverprint $fil 1 eq{CorelPtrnDoFill}{$fil 2 eq
{gradient_fill}{$fil 3 eq{@Pf}{get_simulate_devicen FillColor/ColorModel get
/DeviceN eq and{0 1 FillColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if
FillColor/get_ink_as_spot dexec/set_color dexec @gs wfill @gr}for}{FillColor
/separate_set_color dexec{wfill}{@np}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{
$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp F}bd/S{matrix currentmatrix $ctm
setmatrix $SDF{$SCF $SCA $SCP @ss}if OutlineOverprint safe_setoverprint
get_simulate_devicen OutlineColor/ColorModel get/DeviceN eq and{0 1
OutlineColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if OutlineColor
/get_ink_as_spot dexec/set_color dexec matrix currentmatrix $ptm concat @gs
stroke @gr setmatrix}for}{OutlineColor/separate_set_color dexec{matrix
currentmatrix $ptm concat stroke setmatrix}{@np}ifelse}ifelse $SDF{$dsf $dsa
$dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{@cp B}bd/_E{5 array
astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring pop}bd/@sm{/$ctm
$ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd/Bbllx xd}bd/@c{@cp}bd
/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd/tcc{@cc}def/@B{@gs S
@gr F}bd/@b{@cp @B}bd/init_separation{/SeparationMode where{pop}{
/SeparationMode/Composite def}ifelse/SeparationPlateName where{pop}{
/SeparationPlateName null def}ifelse/SeparateInColor where{pop}{
/SeparateInColor false def}ifelse SeparationMode/Composite eq{
/SeparationPlateIndex -1 def}{/SeparationPlateIndex 4 def}ifelse/CmykPlates[
/Cyan/Magenta/Yellow/Black]def 0 1 3{dup CmykPlates exch get
SeparationPlateName eq{/SeparationPlateIndex xd exit}if pop}for
/CurrentInkName_5 SeparationPlateName def/$ink_5 SeparationPlateIndex def
SeparationMode/OnHost eq{/SepMode_5 2 def}{/SepMode_5 0 def}ifelse/SepsColor
SeparateInColor def}bd/init_separation_from_legacy{EpsFile{/SepMode_5 where{
pop SepMode_5 2 eq{/SeparationMode/OnHost def}{/SeparationMode/Composite def}
ifelse}if/CurrentInkName_5 where{pop/SeparationPlateName CurrentInkName_5 def}
if/$ink_5 where{pop/SeparationPlateIndex $ink_5 def}if/SepsColor where{pop
/SeparateInColor SepsColor def}if}if}bd init_separation_from_legacy/@whi{@gs
-72000 dup m -72000 72000 l 72000 dup l 72000 -72000 l @cp 1 SetGry fill @gr}
bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec cvx]cvx settransfer @whi}
bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}bd/@eax{/deflevel deflevel
dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}ifelse}bd/eax{{exec}forall}
bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict/pdfmark known not{/pdfmark
/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}ifelse}bd
%----------------------------------------------------------------------------
% Raster images support
/set_image_clipping{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index
3 index l 3 index 3 index l clip pop pop pop pop}bd/set_image_parameters{/$frg
xd/$bkg xd/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd}bd
/output_image{/@cc xd @sm @gs set_image_clipping set_image_parameters
SeparationMode/OnHost eq EpsFile and{separate_output_image}{
output_composite_image}ifelse @gr $ctm setmatrix}bd/output_composite_image{
DocPsLevel 3 eq MaskedImage true eq and{output_masked_image}{$bts 1 gt
DocPsLevel 2 eq DocPsLevel 3 eq or and{DevicenImage{output_devicen_image}{
output_color_image}ifelse}{$bts 1 eq{output_monochrome_image}{
output_color_image_level1}ifelse}ifelse}ifelse}bd/separate_output_image{@gs
$bts 1 gt{separate_output_color_image}{separate_output_monochrome_image}ifelse
@gr not{currentoverprint not{1.0 SetGry wfill}if}if @np}bd/set_decode_filter{
ImageCompression/JPEG eq{/DCTDecode filter}{ImageCompression/RLE eq{
/RunLengthDecode filter}{ImageCompression/LZW eq{/LZWDecode filter}if}ifelse}
ifelse}bd/create_datasource{currentfile DevicenImage not get_ps_level 2 gt or{
/ASCII85Decode filter}if set_decode_filter}bd/set_image_strip_parameters{
/stripRows xd/numPlanes xd/stripBuffer $wid $bts mul $ncl mul stripRows mul 8
div ceiling cvi dup 65535 gt{pop $ncl $bts mul}if string def DevicenImage{
/readstrip{DataSource stripBuffer readhexstring pop}bd}{/readstrip{DataSource
stripBuffer readstring pop}bd}ifelse/stripHeight $lly $ury sub stripRows mul
$hei div def/stripOutBuffer $wid stripRows mul numPlanes mul 65535 min string
def/strip_img_dict 8 dict def strip_img_dict begin/ImageType 1 def/Width $wid
def/Height stripRows def/BitsPerComponent $bts def/Decode[numPlanes{0 1}
repeat]def/ImageMatrix[$wid 0 0 stripRows neg 0 $hei 0 gt{stripRows}{0}ifelse]
def/DataSource stripOutBuffer def end}bd/separate_output_color_image{
/plateContent false def $ncl 1 eq{SeparationPlateName/Black eq{
output_color_image/plateContent true def}if}{@np/DataSource create_datasource
def SeparateInColor{DocCmykSpace setcolorspace/numPlanes 4 def}{
DocGrayScaleSpace setcolorspace/numPlanes 1 def}ifelse/stripRows 65535 $wid
$bts mul $ncl numPlanes max mul 8 div div floor cvi 1 max def numPlanes
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{numPlanes $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 $wid stripRows mul 1 sub{/pixelIndex xd stripBuffer
pixelIndex $ncl mul $ncl getinterval{255 div}forall DevicenImage{
ImageDevicenSpace create_devicen_color}{$ncl 3 eq{create_rgb_color}{
create_cmyk_color}ifelse}ifelse/separate_color dexec{/plateContent true def
begin color aload pop end}{pop numPlanes[numPlanes 1 eq{1}{0}ifelse]cvx repeat
}ifelse numPlanes array astore/pixelSepIndex pixelIndex numPlanes mul def
/posColorant 0 def{stripOutBuffer pixelSepIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}ifelse plateContent}bd/separate_output_monochrome_image{
SeparationPlateName/Black eq{output_monochrome_image true}{false}ifelse}bd
/output_monochrome_image{$frg 1 eq{OutlineOverprint safe_setoverprint
ImageForegroundColor/separate_set_color dexec{1}{0}ifelse/$frg xd}{/$frg false
def}ifelse $bkg 1 eq{@gs $ctm setmatrix F @gr}if @np/$dat $wid $bts mul 8 div
ceiling cvi 65535 min string def $bkg $frg add 1 ge{$SDF{$SCF $SCA $SCP @ss}if
$llx $lly Tl $urx $llx sub $ury $lly sub scale $bkg 1 eq{FillColor
/separate_set_color dexec pop}if $wid $hei abs $bts 1 eq{$bkg 1 ge}{$bts 1 ge}
ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts 1 eq
{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}repeat}
ifelse}bd/output_color_image_level1{@np $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min string def $msimage
false eq $ncl 1 eq or{/@cc load false $ncl ColorImage}{$wid $bts mul 8 div
ceiling cvi $ncl 3 eq{dup dup/$dat1 exch string def/$dat2 exch string def
/$dat3 exch string def/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch
string def/$dat2 exch string def/$dat3 exch string def/$dat4 exch string def
/@cc1 load/@cc2 load/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse
$SDF{$dsf $dsa $dsp @ss}if}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2
{currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring
pop}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def
/ImageCompression/None def/MaskedImage false def/DevicenImage false def
/output_color_image{@np $ncl 1 eq{DocGrayScaleSpace}{$ncl 3 eq{DocRgbSpace}
{DocCmykSpace}ifelse}ifelse setcolorspace/$dat $wid $bts mul $ncl mul 8 div
ceiling cvi 65535 min string def $ngx $llx $lly Tl $urx $llx sub $ury $lly sub
scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def currentdict
end image $SDF{$dsf $dsa $dsp @ss}if}bd/simulate_devicen_image{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def/DataSource create_datasource def
/stripRows 65535 $wid $bts mul $ncl mul 8 div div floor cvi 1 max def 1
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{1 $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs $llx $t_lly Tl $urx $llx sub $t_ury $t_lly sub scale 0 1 $ncl
1 sub{@gs/inkIndex exch def 0 1 stripOutBuffer length 1 sub{dup $ncl mul
inkIndex add stripBuffer exch get stripOutBuffer 3 1 roll put}for[/Separation
colorantNames inkIndex get altColorSpace{$ncl 1 sub{0}repeat $ncl inkIndex roll
tintProc}]setcolorspace inkIndex 0 gt{true setoverprint}if strip_img_dict image
@gr}for @gr}for $SDF{$dsf $dsa $dsp @ss}if}bd/output_devicen_image_alt{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def altColorSpace DocCmykSpace eq{
/numAltChannels 4 def}{altColorSpace DocRgbSpace eq{/numAltChannels 3 def}{
/numAltChannels 1 def}ifelse}ifelse/DataSource create_datasource def
altColorSpace setcolorspace/stripRows 65535 $wid $bts mul $ncl numAltChannels
max mul 8 div div floor cvi 1 max def numAltChannels stripRows
set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling cvi 1 sub
def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight stripIndex
mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi def
stripIndex maxStripIndex eq{numAltChannels $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 stripBuffer length $ncl div cvi 1 sub{/pixelIndex xd
stripBuffer pixelIndex $ncl mul $ncl getinterval{255 div}forall tintProc exec
numAltChannels array astore/pixelAltIndex pixelIndex numAltChannels mul def
/posColorant 0 def{stripOutBuffer pixelAltIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}bd/output_devicen_image_native{@np $ngx ImageDevicenSpace
setcolorspace/scanline $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def/readscanline{currentfile scanline readhexstring pop}bind def $llx
$lly Tl $urx $llx sub $ury $lly sub scale 8 dict begin/ImageType 1 def/Width
$wid def/Height $hei abs def/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]
def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource{
readscanline}def currentdict end image $SDF{$dsf $dsa $dsp @ss}if}bd
/output_devicen_image{Level3{output_devicen_image_native}{get_simulate_devicen
{simulate_devicen_image}{output_devicen_image_alt}ifelse}ifelse}bd
/output_masked_image{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def $ngx DevicenImage{ImageDevicenSpace}{$ncl 1 eq{DocGrayScaleSpace}{
$ncl 3 eq{DocRgbSpace}{DocCmykSpace}ifelse}ifelse}ifelse setcolorspace $llx
$lly Tl $urx $llx sub $ury $lly sub scale/ImageDataDict 8 dict def
ImageDataDict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def end
/MaskedImageDict 7 dict def MaskedImageDict begin/ImageType 3 def
/InterleaveType 3 def/MaskDict ImageMaskDict def/DataDict ImageDataDict def end
MaskedImageDict image $SDF{$dsf $dsa $dsp @ss}if}bd/set_image_mask{/$mbts xd
/$mhei xd/$mwid xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def
/Width $mwid def/Height $mhei abs def/BitsPerComponent $mbts def/DataSource
maskstream def/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]
def/Decode[1 0]def end}bd/@daq{dup type/arraytype eq{aload pop}if}bd
/skip_image_body{8 rp/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd
/$wid xd DevicenImage not ImageCompression/JPEG eq or ImageCompression/RLE eq
or ImageCompression/LZW eq or{create_datasource flushfile}{/scanline $wid $bts
mul $ncl mul 8 div ceiling cvi dup 65535 gt{pop $bts $ncl mul}if string def
/upperBound $wid $hei mul $bts mul $ncl mul scanline length div cvi 1 sub def 0
1 upperBound{pop currentfile scanline readhexstring pop pop}for}ifelse}bd
/disable_raster_output{deflevel 0 eq{@rs}if/output_image load
/output_image_original exch def/output_image/skip_image_body load def
globaldict begin/bSkipDeviceNImage true def end deflevel 0 eq{@sv}if}def
/enable_raster_output{deflevel 0 eq{@rs}if/bSkipDeviceNImage where{
/bSkipDeviceNImage undef/output_image/output_image_original load def}if
deflevel 0 eq{@sv}if}def
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel18Dict begin
@BeginSysCorelDict
/$dcm matrix currentmatrix def
@ssa
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%%ViewingOrientation: 1 0 0 1
%%BoundingBox: 0 0 595 841
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
86.37364 531.79455 114.25635 566.64113 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
114.20334 554.76765 m
109.15569 554.75320 L
108.44476 559.26340 L
107.77578 559.92813 106.93247 560.45282 105.91597 560.83776 C
104.89946 561.22214 103.70041 561.41263 102.32050 561.40894 C
99.37389 561.40016 97.10901 560.32328 95.52614 558.17858 C
93.94271 556.03361 93.15638 553.24006 93.16630 549.79739 C
93.16970 548.61109 L
93.18019 545.16841 93.97928 542.37146 95.56724 540.22110 C
97.15550 538.06904 99.39175 536.99868 102.27657 537.00718 C
103.60998 537.01058 104.83058 537.20844 105.93836 537.59934 C
107.04557 537.98967 107.90135 538.51975 108.50400 539.18872 C
109.18857 543.70375 L
114.23650 543.71849 L
114.25635 537.01937 L
112.89572 535.43310 111.15893 534.16857 109.04513 533.22378 C
106.93077 532.27984 104.56356 531.80306 101.94265 531.79483 C
97.39899 531.78151 93.67228 533.34454 90.76309 536.48447 C
87.85417 539.62413 86.39178 543.65924 86.37761 548.59124 C
86.37392 549.73049 L
86.35975 554.64661 87.79011 558.69080 90.66501 561.86277 C
93.54019 565.03502 97.26491 566.62753 101.83975 566.64085 C
104.46009 566.64907 106.82674 566.17937 108.93855 565.23118 C
111.05008 564.28413 112.79877 563.02923 114.18350 561.46677 C
114.20334 554.76765 L
@c
F

@rax %Note: Object
117.26447 531.86343 140.25005 557.28113 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
126.88809 536.75660 m
127.88334 536.75972 128.78816 536.97685 129.60113 537.40885 C
130.41411 537.84198 131.04624 538.38283 131.49666 539.03282 C
131.48561 542.76633 L
128.11436 542.75613 L
126.71178 542.75159 125.64935 542.41994 124.92709 541.76287 C
124.20510 541.10438 123.84539 540.31436 123.84822 539.39452 C
123.85077 538.56454 124.12006 537.91767 124.65751 537.45165 C
125.19383 536.98535 125.93764 536.75348 126.88809 536.75660 C
@c
132.62513 532.36176 m
132.44287 532.76825 132.28328 533.18636 132.14636 533.61609 C
132.00917 534.04583 131.90230 534.47783 131.82548 534.91635 C
131.04397 534.00869 130.09181 533.27367 128.97014 532.71241 C
127.84791 532.15200 126.56296 531.86854 125.11502 531.86372 C
122.71691 531.85691 120.81033 532.50378 119.39641 533.80375 C
117.98192 535.10485 117.27184 536.87877 117.26476 539.12636 C
117.25824 541.41902 118.17298 543.19380 120.00954 544.45124 C
121.84611 545.70898 124.54413 546.34280 128.10387 546.35357 C
131.47512 546.36350 L
131.46775 548.76189 L
131.46435 549.93855 131.12220 550.84989 130.44161 551.49647 C
129.76101 552.14277 128.75698 552.46450 127.42980 552.46082 C
126.67550 552.45827 126.00454 552.36898 125.41663 552.19408 C
124.82901 552.01890 124.35420 551.80998 123.99335 551.56762 C
123.57099 548.94189 L
118.59364 548.92715 L
118.59987 554.35748 L
119.80431 555.17528 121.18649 555.86580 122.74583 556.42847 C
124.30517 556.99087 126.00510 557.27546 127.84535 557.28085 C
130.87729 557.28964 133.34145 556.55376 135.23896 555.07436 C
137.13619 553.59383 138.08948 551.48088 138.09742 548.73581 C
138.12718 538.62236 L
138.12831 538.24535 138.13285 537.89046 138.14192 537.55880 C
138.14986 537.22715 138.17735 536.91024 138.22384 536.60891 C
140.23814 536.34302 L
140.25005 532.38416 L
132.62513 532.36176 L
@c
F

@rax %Note: Object
142.15266 532.39238 159.52847 557.36986 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
142.55263 536.35153 m
145.71808 537.04035 L
145.67329 552.22129 L
142.16457 552.88998 L
142.15266 556.87181 L
151.81370 556.90044 L
152.11814 553.32652 L
152.68734 554.59502 153.42406 555.58545 154.32690 556.29723 C
155.22973 557.00872 156.27713 557.36589 157.46825 557.36957 C
157.81550 557.37071 158.18117 557.34548 158.56611 557.29361 C
158.95106 557.24173 159.27137 557.17880 159.52847 557.10454 C
158.84476 551.08346 L
156.12945 551.14384 L
155.16397 551.14072 154.36517 550.94939 153.73276 550.57068 C
153.10006 550.19169 152.61902 549.65509 152.28935 548.95975 C
152.32450 537.05962 L
155.49420 536.38951 L
155.50583 532.43036 L
142.56425 532.39238 L
142.55263 536.35153 L
@c
F

@rax %Note: Object
160.36923 532.44425 173.80006 566.84693 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
160.38142 562.83477 m
160.36923 566.81717 L
170.50535 566.84693 L
170.59635 537.11150 L
173.78844 536.44110 L
173.80006 532.48224 L
160.81342 532.44425 L
160.80123 536.40340 L
163.98935 537.09194 L
163.91254 562.16665 L
160.38142 562.83477 L
@c
F

@rax %Note: Object
175.20123 532.04740 196.67906 557.45490 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
186.86891 552.36416 m
185.64718 552.36047 184.68283 551.89020 183.97672 550.95250 C
183.27061 550.01537 182.83663 548.78513 182.67534 547.26094 C
182.74337 547.14841 L
190.84337 547.17250 L
190.84167 547.76069 L
190.83742 549.16299 190.50633 550.28211 189.84784 551.11720 C
189.18935 551.95228 188.19609 552.36841 186.86891 552.36416 C
@c
186.86920 532.04769 m
183.33950 532.03776 180.51506 533.16085 178.39729 535.41694 C
176.27868 537.67332 175.21427 540.54425 175.20435 544.02775 C
175.20151 544.93285 L
175.19074 548.56800 176.18088 551.56564 178.17279 553.92406 C
180.16413 556.28277 182.84145 557.46000 186.20561 557.45461 C
189.50882 557.46482 192.07559 556.47666 193.90677 554.49071 C
195.73739 552.50561 196.65865 549.81553 196.66857 546.42161 C
196.67906 542.82416 L
182.06334 542.78107 L
182.01827 542.64586 L
182.14384 541.03181 182.68668 539.70605 183.64791 538.66800 C
184.60885 537.62995 185.91109 537.11376 187.55490 537.11830 C
189.01814 537.12312 190.23222 537.27279 191.19657 537.57043 C
192.16120 537.86721 193.21540 538.33408 194.36003 538.97102 C
196.15946 534.90387 L
195.15118 534.10139 193.84498 533.42674 192.24000 532.87852 C
190.63531 532.33143 188.84466 532.05392 186.86920 532.04769 C
@c
F

@rax %Note: Object
198.68428 532.11628 212.70557 563.65342 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
207.54822 563.65342 m
207.56580 557.07109 L
211.86482 557.08384 L
211.87871 552.44608 L
207.57997 552.43332 L
207.61654 539.96570 L
207.61937 539.01609 207.81751 538.33805 208.21096 537.93241 C
208.60384 537.52564 209.13279 537.32409 209.79638 537.32636 C
210.24879 537.32721 210.64507 537.34706 210.98409 537.38589 C
211.32369 537.42444 211.70409 537.49020 212.12589 537.58205 C
212.70557 532.80935 L
211.96772 532.58117 211.23638 532.40882 210.51269 532.29373 C
209.78901 532.17836 209.00466 532.11969 208.16022 532.11657 C
205.88258 532.11033 204.12709 532.73083 202.89430 533.97921 C
201.66094 535.22787 201.04072 537.20957 201.03250 539.92403 C
200.99594 552.41348 L
198.69817 552.40299 L
198.68428 557.04104 L
200.98176 557.05153 L
200.96419 563.63357 L
207.54822 563.65342 L
@c
F

@rax %Note: Object
214.03644 532.16957 237.13909 557.57849 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
220.64485 544.62217 m
220.65137 542.38989 221.04879 540.59896 221.83682 539.25165 C
222.62542 537.90350 223.89420 537.23282 225.64431 537.23792 C
227.34850 537.24359 228.59490 537.92532 229.38265 539.28567 C
230.17068 540.64517 230.56129 542.43383 230.55477 544.65165 C
230.55335 545.12674 L
230.54655 547.29893 230.14176 549.06945 229.33814 550.44028 C
228.53480 551.81027 227.27310 552.49285 225.55389 552.48775 C
223.83439 552.48265 222.58403 551.79241 221.80422 550.41789 C
221.02356 549.04224 220.63663 547.26945 220.64315 545.09754 C
220.64485 544.62217 L
@c
214.03672 545.07770 m
214.02595 548.72759 215.03877 551.72098 217.07575 554.05757 C
219.11272 556.39389 221.93376 557.56743 225.53858 557.57820 C
229.15871 557.58869 231.99392 556.43556 234.04507 554.11937 C
236.09565 551.80205 237.12633 548.81065 237.13739 545.14602 C
237.13880 544.67093 L
237.14957 540.99014 236.13619 537.98967 234.09950 535.66753 C
232.06224 533.34709 229.24885 532.18091 225.65934 532.16986 C
222.02419 532.15909 219.18104 533.30854 217.13046 535.61707 C
215.07959 537.92759 214.04891 540.92211 214.03814 544.60233 C
214.03672 545.07770 L
@c
F

@rax %Note: Object
238.42687 532.68690 266.50970 557.66948 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
238.82683 536.64605 m
241.99257 537.33487 L
241.94778 552.51609 L
238.43906 553.18450 L
238.42687 557.16633 L
248.08791 557.19496 L
248.39235 553.68879 L
249.20277 554.94283 250.20312 555.91909 251.39310 556.61641 C
252.58224 557.31345 253.91594 557.66438 255.39477 557.66920 C
257.86800 557.67657 259.80094 556.90498 261.19332 555.35584 C
262.58542 553.80643 263.28671 551.37231 263.29635 548.05380 C
263.32838 537.39808 L
266.49780 536.72797 L
266.50970 532.76882 L
253.88476 532.73083 L
253.87285 536.68998 L
256.69928 537.37795 L
256.66781 548.01156 L
256.66271 549.65565 256.32737 550.81984 255.66180 551.50441 C
254.99594 552.18898 253.99191 552.52913 252.64942 552.52517 C
251.77465 552.52233 250.99058 552.34290 250.29836 551.98630 C
249.60501 551.62970 249.02589 551.12655 248.56044 550.47628 C
248.59871 537.35414 L
251.27093 536.68233 L
251.28255 532.72318 L
238.83902 532.68690 L
238.82683 536.64605 L
@c
F

@rax %Note: Object
140.28406 504.58224 158.88246 523.18885 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
147.86929 523.15654 m
147.87581 520.94296 L
145.91480 520.55915 L
145.94287 510.99931 L
145.94655 509.79118 146.27395 508.88863 146.92564 508.29080 C
147.57732 507.69326 148.46939 507.39676 149.60154 507.40044 C
150.75043 507.40328 151.65071 507.70346 152.30324 508.30129 C
152.95550 508.89798 153.28006 509.80535 153.27666 511.02142 C
153.24831 520.58154 L
151.29723 520.95317 L
151.29099 523.16674 L
158.87594 523.18885 L
158.88246 520.97528 L
156.92117 520.59203 L
156.94951 511.03219 L
156.95546 508.97735 156.28280 507.38967 154.93181 506.27112 C
153.58082 505.15172 151.80690 504.58876 149.60976 504.58252 C
147.42113 504.57515 145.65231 505.12819 144.30274 506.23965 C
142.95373 507.35027 142.27597 508.93370 142.27002 510.98854 C
142.24167 520.54838 L
140.29058 520.92000 L
140.28406 523.13386 L
142.23402 523.13953 L
145.90687 523.15002 L
147.86929 523.15654 L
@c
F

@rax %Note: Object
159.66964 504.87676 175.28230 518.76624 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
159.89216 507.07843 m
161.65191 507.46054 L
161.62696 515.90069 L
159.67616 516.27231 L
159.66964 518.48674 L
165.04101 518.50233 L
165.21024 516.55294 L
165.66094 517.25055 166.21682 517.79282 166.87843 518.18088 C
167.53975 518.56894 168.28101 518.76369 169.10306 518.76595 C
170.47843 518.77020 171.55332 518.34132 172.32718 517.48044 C
173.10104 516.61899 173.49080 515.26545 173.49647 513.42038 C
173.51376 507.49569 L
175.27606 507.12406 L
175.28230 504.92268 L
168.26372 504.90170 L
168.25720 507.10337 L
169.82844 507.48491 L
169.81087 513.39685 L
169.80831 514.31074 169.62180 514.95817 169.25159 515.33915 C
168.88139 515.71843 168.32324 515.90835 167.57717 515.90636 C
167.09046 515.90494 166.65449 515.80460 166.26954 515.60617 C
165.88431 515.40860 165.56230 515.12854 165.30350 514.76683 C
165.32532 507.47131 L
166.81039 507.09883 L
166.81691 504.89745 L
159.89868 504.87676 L
159.89216 507.07843 L
@c
F

@rax %Note: Object
176.11030 504.92551 183.54699 524.56450 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
181.73622 521.80951 m
178.06309 521.79874 L
178.05487 524.55373 L
181.72772 524.56450 L
181.73622 521.80951 L
@c
176.33282 507.12690 m
178.10532 507.50929 L
178.08009 515.94945 L
176.11682 516.32107 L
176.11030 518.53521 L
181.74557 518.55194 L
181.77846 507.52006 L
183.54047 507.14844 L
183.54699 504.94706 L
176.33906 504.92551 L
176.33282 507.12690 L
@c
F

@rax %Note: Object
183.74797 504.96491 197.66665 518.60126 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
189.93061 516.36387 m
188.64822 516.12123 L
190.46494 510.03808 L
190.70759 508.75625 L
190.78356 508.75625 L
191.04378 510.03950 L
192.79928 516.12038 L
191.49052 516.36813 L
191.48400 518.58255 L
197.66013 518.60126 L
197.66665 516.38683 L
196.48460 516.19493 L
192.50504 504.97483 L
188.99575 504.96491 L
184.93710 516.16035 L
183.75420 516.34517 L
183.74797 518.55987 L
189.92438 518.57830 L
189.93061 516.36387 L
@c
F

@rax %Note: Object
198.17235 504.74835 210.11357 518.87367 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
204.29887 516.04299 m
203.61969 516.04101 203.08365 515.77937 202.69134 515.25893 C
202.29846 514.73735 202.05723 514.05364 201.96765 513.20636 C
202.00564 513.14343 L
206.50876 513.15647 L
206.50791 513.48359 L
206.50564 514.26340 206.32110 514.88561 205.95515 515.34992 C
205.58891 515.81480 205.03672 516.04526 204.29887 516.04299 C
@c
204.65943 504.74863 m
202.69729 504.74296 201.12690 505.36658 199.94939 506.62120 C
198.77159 507.87553 198.17972 509.47172 198.17405 511.40891 C
198.17263 511.91150 L
198.16668 513.93260 198.71717 515.59909 199.82438 516.91124 C
200.93187 518.22170 202.42035 518.87707 204.29036 518.87339 C
206.12693 518.87906 207.55446 518.32970 208.57238 517.22617 C
209.59030 516.12180 210.10224 514.62652 210.10762 512.73950 C
210.11357 510.73909 L
201.98750 510.71556 L
201.96255 510.64044 L
202.03228 509.74299 202.33417 509.00542 202.86850 508.42885 C
203.40255 507.85172 204.12680 507.56457 205.04098 507.56740 C
205.85424 507.57024 206.52917 507.65329 207.06548 507.81883 C
207.60151 507.98353 208.18772 508.24346 208.82409 508.59723 C
209.82472 506.33631 L
209.26403 505.89014 208.53780 505.51483 207.64545 505.20983 C
206.75339 504.90539 205.75786 504.75146 204.65943 504.74863 C
@c
F

@rax %Note: Object
211.35005 505.03493 221.01052 518.92157 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
211.57257 507.23660 m
213.33260 507.61899 L
213.30765 516.05887 L
211.35657 516.43049 L
211.35005 518.64491 L
216.72142 518.66050 L
216.89065 516.67398 L
217.20728 517.37868 217.61660 517.92945 218.11861 518.32545 C
218.62063 518.72060 219.20287 518.91931 219.86532 518.92129 C
220.05836 518.92186 220.26161 518.90769 220.47562 518.87906 C
220.68935 518.84957 220.86765 518.81528 221.01052 518.77389 C
220.63039 515.42646 L
219.12066 515.46019 L
218.58406 515.45877 218.13987 515.35191 217.78838 515.14157 C
217.43688 514.93096 217.16901 514.63247 216.98589 514.24639 C
217.00545 507.62976 L
218.76746 507.25701 L
218.77398 505.05591 L
211.57880 505.03493 L
211.57257 507.23660 L
@c
F

@rax %Note: Object
221.98025 504.81865 233.18050 518.92016 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
232.66233 514.02983 m
230.19676 514.02274 L
229.80161 515.71928 L
229.54932 515.91997 229.23269 516.08665 228.85030 516.22016 C
228.46819 516.35310 228.04668 516.41915 227.58576 516.41745 C
226.94003 516.41546 226.42894 516.26920 226.05250 515.97950 C
225.67578 515.68838 225.48813 515.32469 225.48954 514.88872 C
225.49068 514.47770 225.67209 514.13669 226.03351 513.86598 C
226.39465 513.59386 227.11663 513.35461 228.19890 513.14910 C
229.88580 512.81830 231.13672 512.32932 231.95197 511.68161 C
232.76721 511.03361 233.17654 510.13984 233.18022 508.99975 C
233.18362 507.77518 232.66035 506.77370 231.61039 505.99531 C
230.56016 505.21635 229.17543 504.82460 227.45650 504.81893 C
226.40797 504.81581 225.44532 504.96633 224.56828 505.26992 C
223.69096 505.57351 222.91200 506.00891 222.23112 506.57754 C
222.18435 509.63414 L
224.75027 509.64151 L
225.25880 507.86901 L
225.47707 507.68561 225.77528 507.55011 226.15285 507.46280 C
226.53071 507.37691 226.92501 507.33326 227.33575 507.33468 C
228.08239 507.33666 228.64989 507.47187 229.03909 507.74202 C
229.42800 508.01216 229.62217 508.37669 229.62047 508.83761 C
229.61962 509.24041 229.42148 509.58822 229.02633 509.88047 C
228.63118 510.17272 227.90551 510.43068 226.84791 510.65405 C
225.24520 510.97635 224.03424 511.45682 223.21474 512.09631 C
222.39524 512.73581 221.98365 513.60831 221.98054 514.71524 C
221.97713 515.85534 222.44400 516.84009 223.38057 517.66951 C
224.31742 518.49808 225.65395 518.91477 227.38961 518.91987 C
228.44636 518.92328 229.44671 518.78381 230.39121 518.50176 C
231.33543 518.21887 232.07613 517.85631 232.61443 517.41383 C
232.66233 514.02983 L
@c
F

@rax %Note: Object
234.49748 505.10466 241.93417 524.74450 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
240.12340 521.98951 m
236.44998 521.97874 L
236.44176 524.73373 L
240.11490 524.74450 L
240.12340 521.98951 L
@c
234.72000 507.30576 m
236.49250 507.68901 L
236.46728 516.12888 L
234.50400 516.50079 L
234.49748 518.71493 L
240.13304 518.73165 L
240.16564 507.69978 L
241.92765 507.32731 L
241.93417 505.12592 L
234.72652 505.10466 L
234.72000 507.30576 L
@c
F

@rax %Note: Object
243.03203 504.88214 250.81682 522.08957 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
247.94901 522.08957 m
247.95893 518.75660 L
250.34910 518.76369 L
250.35647 516.18472 L
247.96658 516.17764 L
247.98728 509.24693 L
247.98841 508.71827 248.09868 508.34098 248.31751 508.11534 C
248.53606 507.88970 248.82973 507.77717 249.19909 507.77858 C
249.45052 507.77943 249.67077 507.79077 249.85928 507.81146 C
250.04806 507.83301 250.25953 507.86957 250.49424 507.92031 C
250.81682 505.26709 L
250.40608 505.14038 249.99959 505.04513 249.59735 504.98050 C
249.19483 504.91701 248.75887 504.88384 248.28917 504.88243 C
247.02293 504.87902 246.04696 505.22400 245.36154 505.91792 C
244.67584 506.61213 244.33115 507.71424 244.32661 509.22312 C
244.30592 516.16687 L
243.03940 516.16035 L
243.03203 518.73931 L
244.29855 518.74583 L
244.28863 522.07880 L
247.94901 522.08957 L
@c
F

@rax %Note: Object
251.68252 499.67036 266.24268 518.81046 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
266.24268 516.59603 m
264.97276 516.40413 L
260.00532 503.14365 L
259.61414 502.16173 259.09030 501.33770 258.43436 500.67354 C
257.77757 500.00910 256.78687 499.67461 255.46224 499.67036 C
255.44750 499.67036 L
255.43304 499.67036 L
255.13370 499.67121 254.85194 499.69531 254.58775 499.74406 C
254.31477 499.79339 253.99389 499.86369 253.62482 499.95468 C
254.04463 502.63597 L
254.16198 502.61868 254.28387 502.60280 254.40945 502.58580 C
254.53531 502.57020 254.64416 502.56142 254.73657 502.56142 C
255.34885 502.56369 255.81798 502.71392 256.14425 503.01241 C
256.47024 503.31118 256.72082 503.68365 256.89572 504.12784 C
257.30787 505.16050 L
252.95981 516.35537 L
251.68876 516.55294 L
251.68252 518.76737 L
258.34904 518.78750 L
258.35556 516.57307 L
256.83449 516.31682 L
258.71216 510.88819 L
258.90378 509.90769 L
258.97946 509.89550 L
261.11140 516.32957 L
259.57559 516.57647 L
259.56935 518.79090 L
266.23616 518.81046 L
266.24268 516.59603 L
@c
F

@rax %Note: Object
283.54365 516.99402 336.51808 566.33726 @E
/$fm 1 def
 0 O 0 @g
0.9961 0.9961 0.9961  create_rgb_color set_solid_fill
336.51043 546.61323 m
325.73849 534.99685 L
330.39524 555.31616 L
324.19361 552.03307 L
319.54479 564.68154 L
314.89398 552.03307 L
308.69235 555.31616 L
313.34910 534.99685 L
302.34728 546.86069 L
301.63351 541.68038 L
292.61310 544.31121 L
296.77635 534.47159 L
292.95524 533.42929 L
305.84608 523.80312 L
320.51197 529.46022 329.71294 527.81669 335.10302 525.63118 C
334.31074 522.53348 333.13720 519.65320 331.58636 516.99402 C
331.15181 517.23213 330.69798 517.46258 330.21439 517.68170 C
328.34098 518.53124 326.09027 519.22006 323.38176 519.62173 C
322.33975 519.77622 321.22743 519.88649 320.04794 519.94885 C
319.71770 519.96643 319.38350 519.98003 319.04334 519.98967 C
318.39477 520.00781 317.72636 520.01121 317.03641 519.99931 C
313.98973 519.94687 310.53798 519.59339 306.61455 518.84107 C
306.46715 518.81244 306.32173 518.78863 306.17631 518.76227 C
305.46283 518.63272 304.76891 518.52416 304.09257 518.43572 C
294.24076 517.14737 288.16101 520.06394 284.51650 523.39068 C
284.13723 524.48117 283.81096 525.58611 283.54365 526.70636 C
287.19780 522.89235 293.63924 519.55087 304.31480 523.24157 C
289.89269 534.01039 L
294.90917 535.37839 L
290.23285 546.42841 L
300.49540 543.43531 L
301.38775 549.90482 L
310.87616 539.67373 L
306.69307 557.92035 L
314.15102 553.97225 L
318.69751 566.33726 L
319.29506 566.25846 319.89061 566.17228 320.48617 566.07931 C
324.93657 553.97225 L
332.39424 557.92035 L
328.21313 539.67373 L
336.51808 548.63093 L
336.51043 546.61323 L
@c
F

@rax %Note: Object
285.15940 506.75953 328.62416 521.67487 @E
/$fm 1 def
 0 O 0 @g
0.9961 0.9961 0.9961  create_rgb_color set_solid_fill
304.27739 516.14476 m
294.11688 515.33263 288.39090 518.16614 285.15940 521.67487 C
285.68409 520.38737 286.28362 519.12085 286.96195 517.87757 C
286.99739 517.81238 287.03452 517.74917 287.07194 517.68397 C
290.09707 515.46331 295.17846 513.35546 303.71924 512.66438 C
312.68466 511.93871 318.58157 509.52472 322.45965 506.75953 C
324.80476 508.56945 326.86101 510.55795 328.62416 512.72107 C
324.23272 515.22378 316.81247 517.14652 304.27739 516.14476 C
@c
F

@rax %Note: Object
287.07194 499.85376 322.45965 517.68397 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
287.07194 517.68397 m
291.91918 508.91698 299.71106 503.94983 308.71587 500.03291 C
309.25049 499.80019 309.83244 499.78800 310.36507 500.03291 C
313.00498 501.25635 315.93770 502.47553 318.41235 503.98328 C
319.84554 504.85691 321.19398 505.78271 322.45965 506.75953 C
318.58157 509.52472 312.68466 511.93871 303.71924 512.66438 C
295.17846 513.35546 290.09707 515.46331 287.07194 517.68397 C
@c
F

@rax %Note: Object
284.51650 512.72107 331.58835 523.38728 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
306.61455 518.84107 m
295.26491 516.66378 288.46375 519.78501 284.51650 523.38728 C
284.71720 522.81241 284.92951 522.24123 285.15940 521.67487 C
288.39090 518.16614 294.11688 515.33263 304.27739 516.14476 C
316.81247 517.14652 324.23272 515.22378 328.62416 512.72107 C
329.72882 514.07717 330.71754 515.50271 331.58835 516.99742 C
326.78419 519.63562 319.03767 521.22387 306.61455 518.84107 C
@c
F

@rax %Note: Object
320.48617 539.67373 336.56145 566.07931 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
332.39424 557.92035 m
328.21313 539.67373 L
336.51808 548.63093 L
336.52998 552.70063 336.52205 556.77061 336.56145 560.83890 C
336.56145 560.94746 L
336.55209 561.62013 336.35537 562.00649 335.61581 562.25906 C
330.66454 563.95757 325.62850 565.27682 320.48617 566.07931 C
324.93657 553.97225 L
332.39424 557.92035 L
@c
F

@rax %Note: Object
282.51751 521.64028 318.69751 566.95266 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
304.31480 523.24157 m
289.89269 534.01039 L
294.90917 535.37839 L
290.23285 546.42841 L
300.49540 543.43531 L
301.38775 549.90482 L
310.87616 539.67373 L
306.69307 557.92035 L
314.15102 553.97225 L
318.69751 566.33726 L
317.44942 566.50167 316.19310 566.63660 314.93310 566.73666 C
304.25187 567.58224 293.90457 565.90554 283.81691 562.39795 C
282.84151 562.05638 282.50617 561.62154 282.51808 560.58520 C
282.57562 556.00809 282.57250 546.84765 282.57250 546.84765 C
282.57250 542.72098 282.53027 538.59402 282.58157 534.46706 C
282.61559 531.80731 282.94214 529.21843 283.54365 526.70324 C
287.19780 522.88894 293.63924 519.55143 304.31480 523.24157 C
@c
F

@rax %Note: Object
292.61310 523.80312 336.51043 564.68154 @E
/$fm 1 def
 0 O 0 @g
0.9294 0.1961 0.2157  create_rgb_color set_solid_fill
335.10501 525.63033 m
335.78901 528.29972 336.18983 531.13039 336.29613 534.12548 C
336.44353 538.28561 336.49257 542.44913 336.51043 546.61323 C
325.73849 534.99685 L
330.39524 555.31616 L
324.19361 552.03307 L
319.54479 564.68154 L
314.89398 552.03307 L
308.69235 555.31616 L
313.34910 534.99685 L
302.34728 546.86069 L
301.63351 541.68038 L
292.61310 544.31121 L
296.77635 534.47159 L
292.95524 533.42929 L
305.84608 523.80312 L
320.51367 529.46079 329.71493 527.81613 335.10501 525.63033 C
@c
F

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel18Dict 18.0 0
%%EOF
