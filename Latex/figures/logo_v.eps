%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 112 616 294 765 
%%LanguageLevel: 2
%%Creator: CorelDRAW X8
%%Title: logo_v.eps
%%CreationDate: Sat May 13 15:24:20 2023
%%DocumentProcessColors: Magenta Yellow Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/DocPsLevel 2 def
%Build: CorelDRAW X8 Version 18.1.0.661
/EpsFile true def
%%BeginResource: procset wCorel18Dict 18.0 0
/wCorel18Dict 300 dict def wCorel18Dict begin
%----------------------------------------------------------------------------
% Core Corel PostScript prolog functions
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/rp{{pop}repeat}bd/dexec{
exch begin cvx exec end}bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np
/newpath ld/Tl/translate ld/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd
/spg/showpage ld/showpage{}bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf
xd/$sdf false def/$SDF false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0
eq{$dsf 3 1 roll 4 -1 roll pop}if exch $Scra add exch load SetScr}bd
/SeparationMode where{pop}{/SeparationMode/Composite def}ifelse
/SeparationPlateName where{pop}{/SeparationPlateName null def}ifelse
/SeparateInColor where{pop}{/SeparateInColor false def}ifelse/EpsFile where
{pop}{/EpsFile false def}ifelse/FillOverprint false def/$fil 0 def
/OutlineOverprint 0 def/$PF false def/$bkg false def/CurrentOverprint false def
matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def/$stm matrix def
/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent
16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/get_ps_level/languagelevel where{pop systemdict/languagelevel get exec}{1}
ifelse def/Level2 get_ps_level 2 ge def/Level3 get_ps_level 3 ge def
/AdobeDistiller/product where{pop systemdict/setdistillerparams known product
(Adobe PostScript Parser)ne and}{false}ifelse def/InRipSeparation
AdobeDistiller{false}{Level2{currentpagedevice/Separations 2 copy known{get}{
pop pop false}ifelse}{false}ifelse}ifelse def/ColorSeparationLevel1 1 0 0 0
gsave setcmykcolor currentcmykcolor grestore add add add 0 ne 0 1 0 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 1 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 0 1 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne and and and not def
/ColorSeparation/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{
InRipSeparation{true}{ColorSeparationLevel1}ifelse}ifelse}ifelse def
/IsColorDevice/deviceinfo where{pop deviceinfo/Colors known{deviceinfo/Colors
get exec 1 gt}{false}ifelse}{/statusdict where{pop statusdict/processcolors
known{statusdict/processcolors get exec 1 gt}{false}ifelse}{false}ifelse}
ifelse def/get_simulate_devicen get_ps_level 2 eq{{SeparationMode/OnHost ne
InRipSeparation AdobeDistiller or and}bind}{false}ifelse def/DocGrayScaleSpace
[/DeviceGray]def/DocRgbSpace[/DeviceRGB]def/DocCmykSpace[/DeviceCMYK]def
/DocLabSpace[/CIEBasedABC <</BlackPoint[0 0 0]/WhitePoint[0.9637 1.0000 0.8241
]/RangeABC[0 100 -128 127 -128 127]/DecodeABC[{16 add 116 div}bind{500 div}
bind{200 div}bind]/MatrixABC[1 1 1 1 0 0 0 0 -1]/DecodeLMN[{dup 0.206897 ge{dup
dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.9637 mul}bind{dup 0.206897
ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 1.0000 mul}bind{dup
0.206897 ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.8241 mul}bind]
>>]def/validate_cie_colorspace_whitepoint{load dup aload pop/WhitePoint get 1
1.0 put pop}bd/set_cie_colorspaces{/DocGrayScaleSpaceCIE where{pop
/DocGrayScaleSpaceCIE validate_cie_colorspace_whitepoint/DocGrayScaleSpace xd
DocGrayScaleSpace aload pop begin pop/DecodeA where{pop DecodeA type/arraytype
eq{DecodeA aload pop/DecodeA exch def}if}if end}if/DocRgbSpaceCIE where{pop
/DocRgbSpaceCIE validate_cie_colorspace_whitepoint/DocRgbSpace xd}if
/DocCmykSpaceCIE where{pop/DocCmykSpaceCIE validate_cie_colorspace_whitepoint
/DocCmykSpace xd}if}bd/set_rendering_intent{Level3{findcolorrendering{
/ColorRendering findresource setcolorrendering}{dup/DefaultColorRendering eq{
pop}{/ColorRendering findresource setcolorrendering}}ifelse}{pop}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}def}ifelse
/setcustomcolor where SeparationMode/OnHost ne and{pop}{/tint_cmyk_color{5 -1
roll dup 1 ge{pop}{4{dup 6 -1 roll mul exch}repeat pop}ifelse}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{SepsColor not{4 1 roll pop pop pop
1 exch sub SetGry}{SetCmyk_5}ifelse}ifelse}bd/setcustomcolor{exch aload pop
SepMode_5 0 eq{pop tint_cmyk_color setprocesscolor_5}{CurrentInkName_5 eq{4
index}{0}ifelse 6 1 roll 5 rp 1 sub neg SetGry}ifelse}bd}ifelse
/convert_rgb_to_cmyk{dup type/dicttype eq{}{3{1 exch sub 3 1 roll}repeat 3 copy
min min 3{dup 5 -1 roll sub neg exch}repeat}ifelse}bd/safe_setcolorspace{dup
currentcolorspace eq{pop}{setcolorspace}ifelse}bd/safe_setoverprint{dup type
/booleantype eq{dup currentoverprint ne{setoverprint}{pop}ifelse}{1 eq
setoverprint}ifelse}bd/is_cmyk_channel_name{/channel_name xd channel_name/Cyan
eq channel_name/Magenta eq or channel_name/Yellow eq or channel_name/Black eq
or{true}{false}ifelse}bd/is_rgb_channel_name{/channel_name xd channel_name/Red
eq channel_name/Green eq or channel_name/Blue eq or{true}{false}ifelse}bd
/is_spot_channel_name{/channel_name xd channel_name is_cmyk_channel_name
channel_name is_rgb_channel_name or channel_name/Gray eq or{false}{true}ifelse
}bd/spot_tint_transform_proc{/alternativeSpace xd/alternativeColors xd/tint xd
alternativeSpace DocLabSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3
def}{alternativeSpace DocCmykSpace eq{/mixMethod/Subtractive def
/altSpaceNumChannels 4 def}{alternativeSpace DocRgbSpace eq{/mixMethod
/Additive def/altSpaceNumChannels 3 def}{alternativeSpace DocGrayScaleSpace eq
{/mixMethod/Additive def/altSpaceNumChannels 1 def}if}ifelse}ifelse}ifelse
alternativeSpace DocLabSpace eq{alternativeColors aload pop tint mul 3 1 roll
tint mul 3 1 roll dup 100 exch sub 1 tint sub mul add 3 1 roll}{/tintedColor
altSpaceNumChannels{0.0}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def alternativeColors
altChannelIndex get mixMethod/Additive eq{1.0 exch sub tint mul 1.0 exch sub}{
tint mul}ifelse tintedColor altChannelIndex 3 2 roll put}for tintedColor aload
pop}ifelse}bd/devicen_colorant_mixer_proc{/numChannels xd/alternativeSpace xd
/channelNames xd/alternativeColors xd numColorants array astore/colorants xd
/is_spot_channel_name_loc{is_spot_channel_name}bind def alternativeSpace
DocCmykSpace eq{/mixMethod/Subtractive def/altSpaceNumChannels 4 def
/is_spot_channel_name_loc{is_cmyk_channel_name not}bind def}{alternativeSpace
DocRgbSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3 def
/is_spot_channel_name_loc{is_rgb_channel_name not}bind def}{alternativeSpace
DocGrayScaleSpace eq{/mixMethod/Additive def/altSpaceNumChannels 1 def
/is_spot_channel_name_loc{/Gray ne}bind def}if}ifelse}ifelse mixMethod
/Additive eq{/mixedColor altSpaceNumChannels{0.0}repeat altSpaceNumChannels
array astore def/bProcessPlateTinted false def 0 1 numChannels 1 sub{
/channelIndex exch def channelNames channelIndex get is_spot_channel_name_loc
/bSpotChannel xd/sourceChannel colorants channelIndex get def/bWhiteBackground
0 mixedColor{add}forall altSpaceNumChannels div 0.999 gt bProcessPlateTinted
and def bSpotChannel bProcessPlateTinted not and{/bSpotChannel false def}if 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def/mixedChannel mixedColor
altChannelIndex get def sourceChannel alternativeColors channelIndex get
altChannelIndex get 1.0 exch sub mul 1.0 exch sub dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if bSpotChannel{sourceChannel 0.0 gt{mixedChannel mul}{pop
mixedChannel}ifelse}{/bProcessPlateTinted true def globaldict begin
/bSkipDeviceNImage where{pop false}{true}ifelse end DevicenImage and{pop
sourceChannel alternativeColors channelIndex get altChannelIndex get mul
mixedChannel add}{mixedChannel add}ifelse}ifelse dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if mixedColor altChannelIndex 3 2 roll put}for}for}{/mixedColor
altSpaceNumChannels{1}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/targetIndex exch def 0 1 numColorants 1 sub{
/sourceIndex exch def colorants sourceIndex get alternativeColors sourceIndex
get targetIndex get mul 1 exch sub mixedColor targetIndex get mul mixedColor
targetIndex 3 2 roll put}for mixedColor targetIndex 1 mixedColor targetIndex
get sub put}for}ifelse mixedColor aload pop}bd/ColorSpec 9 dict begin/color[]
def/names[]def/num 0 def/ColorModel null def/ColorSpace[]def/set_color{
ColorSeparationLevel1{convert_to_cmyk/color get aload pop setcmykcolor}{
ColorSpace safe_setcolorspace color aload pop setcolor}ifelse}bd
/separate_set_color{SeparationMode/OnHost eq{separate_color{/set_color dexec
true}{pop currentoverprint{false}{SeparateInColor{0 0 0 0 SetCmyk_5 true}{1
SetGry true}ifelse}ifelse}ifelse}{set_color true}ifelse}bd/separate_color{
currentdict false}bd/convert_to_cmyk{currentdict}bd currentdict end def
/GrayscaleColorSpec ColorSpec 9 dict copy begin/names{/Black}def/num 1 def
/ColorModel/Grayscale def/ColorSpace DocGrayScaleSpace def/separate_color{
currentdict false SeparationMode/OnHost eq{SeparationPlateName/Black eq{
SeparateInColor{pop convert_to_cmyk true}{pop true}ifelse}if}if}bd
/convert_to_cmyk{0 0 0 color aload pop 1 exch sub create_cmyk_color}bd
currentdict end def/create_grayscale_color{GrayscaleColorSpec 9 dict copy begin
/color exch 1 array astore def/ColorSpace DocGrayScaleSpace def currentdict end
}bd/RgbColorSpec ColorSpec 9 dict copy begin/names{/Red/Green/Blue}def/num 3
def/ColorModel/Rgb def/ColorSpace DocRgbSpace def/separate_color{
convert_to_cmyk/separate_color dexec}bd/convert_to_cmyk{color aload pop
convert_rgb_to_cmyk create_cmyk_color}bd currentdict end def/create_rgb_color{
RgbColorSpec 9 dict copy begin 3 array astore/color exch def/ColorSpace
DocRgbSpace def currentdict end}bd/HsbColorSpec ColorSpec 9 dict copy begin
/names{/Hue/Saturation/Brightness}def/num 3 def/ColorModel/Hsb def/ColorSpace
DocRgbSpace def/separate_color{convert_to_cmyk/separate_color dexec}bd
/convert_to_cmyk{color aload pop hsb2rgb convert_rgb_to_cmyk create_cmyk_color
}bd/convert_to_rgb{color aload pop hsb2rgb create_rgb_color}bd currentdict end
def/create_hsb_color{HsbColorSpec 9 dict copy begin 3 array astore/color exch
def/ColorSpace DocRgbSpace def currentdict end}bd/CmykColorSpec ColorSpec 9
dict copy begin/names{/Cyan/Magenta/Yellow/Black}def/num 4 def/ColorModel/Cmyk
def/ColorSpace DocCmykSpace def/separate_color{currentdict false
SeparationPlateIndex 0 ge SeparationPlateIndex 3 le and{color
SeparationPlateIndex get dup 0 gt{3 1 roll pop pop SeparateInColor{0 0 0 4
SeparationPlateIndex roll create_cmyk_color true}{1 exch sub
create_grayscale_color true}ifelse}{pop}ifelse}if}bd/convert_to_cmyk{
currentdict}bd currentdict end def/create_cmyk_color{CmykColorSpec 9 dict copy
begin 4 array astore/color exch def/ColorSpace DocCmykSpace def currentdict end
}bd/SpotColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel/Spot def
/set_color{ColorSeparationLevel1{color aload pop get_cmyk_alternative_color
/color get aload pop names aload pop findcmykcustomcolor exch setcustomcolor}{
ColorSpace safe_setcolorspace color aload pop setcolor}ifelse}bd
/separate_color{currentdict false SeparationPlateIndex 4 eq{names aload pop
SeparationPlateName eq{color aload pop dup 0 gt{3 1 roll pop pop
SeparateInColor{pop convert_to_cmyk true}{1 exch sub create_grayscale_color
true}ifelse}{pop}ifelse}if}if}bd/convert_to_cmyk{/alternativeSpace ColorSpace 2
get def/tintTransformProc ColorSpace 3 get def alternativeSpace DocCmykSpace eq
{color aload pop tintTransformProc create_cmyk_color}{alternativeSpace
DocRgbSpace eq{color aload pop tintTransformProc create_rgb_color
/convert_to_cmyk dexec}{alternativeSpace DocGrayScaleSpace eq{0 0 0 color aload
pop 1 sub create_cmyk_color}{0 0 0 1 create_cmyk_color}ifelse}ifelse}ifelse}bd
/get_cmyk_alternative_color{/alternativeSpace ColorSpace 2 get def
alternativeSpace DocCmykSpace eq{alternativeColor aload pop create_cmyk_color}
{alternativeSpace DocRgbSpace eq{alternativeColor aload pop create_rgb_color
/convert_to_cmyk dexec}{alternativeSpace DocGrayScaleSpace eq{alternativeColor
aload pop create_grayscale_color/convert_to_cmyk dexec}{0 0 0 1
create_cmyk_color}ifelse}ifelse}ifelse}bd currentdict end def
/create_spot_colorspace{load/alternativeSpace xd/alternativeColor xd/name xd[
/Separation name alternativeSpace[alternativeColor alternativeSpace
/spot_tint_transform_proc cvx]cvx]}bd/create_spot_color{SpotColorSpec 9 dict
copy begin dup type/arraytype ne{create_spot_colorspace}if/ColorSpace xd/color
exch 1 array astore def ColorSpace 1 get 1 array astore/names xd currentdict
end}bd/DevicenColorSpec SpotColorSpec 9 dict copy begin/ColorModel/DeviceN def
/set_color{Level3{ColorSpace safe_setcolorspace color aload pop setcolor}{
ColorSpace 2 get setcolorspace color aload pop ColorSpace 3 get exec setcolor}
ifelse}bd/separate_color{currentdict false/PlateIndex -1 def 0 1 num 1 sub{dup
names exch get SeparationPlateName eq{/PlateIndex xd exit}if pop}for PlateIndex
0 ge{color PlateIndex get dup 0 gt{SeparateInColor{num 1 sub{0}repeat num
PlateIndex roll ColorSpace create_devicen_color/convert_to_cmyk dexec true}{1
exch sub create_grayscale_color true}ifelse 4 2 roll pop pop}{pop}ifelse}if}bd
/get_ink_as_spot{dup/indexInk xd dup color exch get exch names exch get[1.0 num
1 sub{0}repeat num indexInk roll ColorSpace 3 get exec]ColorSpace 2 get
create_spot_color}bd currentdict end def/create_devicen_colorspace{
/numColorants xd load/alternativeSpace xd bind/tintTransform exch def/names xd
[/DeviceN names alternativeSpace/tintTransform load]}bd/create_devicen_color{
DevicenColorSpec 9 dict copy begin dup type/arraytype ne{
create_devicen_colorspace}if/ColorSpace xd/num ColorSpace 1 get length def
/names ColorSpace 1 get def num array astore/color xd currentdict end}bd
/RegistrationColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel
/Registration def/ColorSpace{[/Separation/All DocCmykSpace{dup dup dup}]}def
/names[/All]def/set_color{ColorSeparationLevel1{DocGrayScaleSpace
safe_setcolorspace color aload pop 1 exch sub setcolor}{ColorSpace
safe_setcolorspace color aload pop setcolor}ifelse}bd/separate_color{
SeparateInColor{convert_to_cmyk true}{color aload pop 1 exch sub
create_grayscale_color true}ifelse}bd/convert_to_cmyk{color aload pop dup dup
dup create_cmyk_color}bd currentdict end def/create_registration_color{
RegistrationColorSpec 9 dict copy begin 1 array astore/color xd currentdict end
}bd/LabColorSpec ColorSpec 9 dict copy begin/names{/L/a/b}def/num 3 def
/ColorModel/Lab def/ColorSpace DocLabSpace def/separate_color{convert_to_cmyk
/separate_color dexec}bd/convert_to_cmyk{0 0 0 0 create_cmyk_color}bd
currentdict end def/create_lab_color{LabColorSpec 9 dict copy begin 3 array
astore/color exch def/ColorSpace DocLabSpace def currentdict end}bd
/set_solid_fill{/FillColor xd/$fil 0 def}bd/set_outline{/OutlineColor xd}bd
/CheckLevelCompatibility{/DocPsLevel where{pop DocPsLevel get_ps_level gt{@np
/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level of Corel document is higher than the PostScript)show 72
132 m(level of this device. Change the PS Level in the Corel application)show
72 120 m(by selecting the PostScript tab in the print dialog, and selecting)
show 72 108 m(document level from the Compatibility drop down list.)show flush
spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known{systemdict
/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd/AutoFlatness where{pop
AutoFlatness{/@ifl{dup currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if}if/@ssa Level2{{true
setstrokeadjust}}{{}}ifelse bd/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M
/setmiterlimit ld/w/setlinewidth ld/O{/FillOverprint xd}bd/R{/OutlineOverprint
xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l/lineto ld/L/l ld/rl/rlineto ld/m
/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld
/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1 exch sub 0 0 0 4 roll 3
create_cmyk_color set_solid_fill/$fil 0 def}bd/G{1 sub neg 0 0 0 4 -1 roll
create_cmyk_color set_outline}bd/i{dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll
2 copy 6 -2 roll c}bd/V/v ld/y{2 copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd
matrix scale $ptm dup concatmatrix/$ptm xd 1 eq{$ptm exch dup concatmatrix
/$ptm xd}if/patternScallingMatrix where{pop patternScallingMatrix $ptm matrix
concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd{/$scp xd/$sca xd/$scf xd}if
}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}if}bd/@D{2 index 0 eq{$dsf 3 1
roll 4 -1 roll pop}if 3 copy exch $Scra add exch load SetScr/$dsp xd/$dsa xd
/$dsf xd}bd/$ngx{$SDF{$SCF SeparationMode/Composite eq{$SCA}{$dsa}ifelse $SCP
@ss}if}bd/min{2 copy le{pop}{exch pop}ifelse}bd/max{2 copy ge{pop}{exch pop}
ifelse}bd/in_range{3 -1 roll min max}bd/InRange/in_range load bd/@sqr{dup 0 rl
dup 0 exch rl neg 0 rl @cp}bd/currentscale{1 0 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt 0 1 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup
3 -1 roll eq{1 add}if}bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch
pop abs 1 exch sub}bd/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}
if exch}repeat pop}bd/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy min min 3{
dup 5 -1 roll sub neg exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul
add 1 index .114 mul add 4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{
/CorelImage systemdict/image get def/CorelSetGray systemdict/setgray get def
/CorelGetGray systemdict/currentgray get def/CorelSetTransfer systemdict
/settransfer get def/CorelGetTransfer systemdict/currenttransfer get def
/SetRgb/setrgbcolor ld/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry
/currentgray ld/SetRgb2 systemdict/setrgbcolor get def/GetRgb2 systemdict
/currentrgbcolor get def/SetHsb systemdict/sethsbcolor get def/GetHsb
systemdict/currenthsbcolor get def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll
dup floor sub 3 1 roll SetHsb GetRgb2}bd/setcmykcolor where{pop/LumSepsDict
where{pop/SetCmyk_5{LumSepsDict/setcmykcolor get exec}def}{/AldusSepsDict where
{pop/SetCmyk_5{AldusSepsDict/setcmykcolor get exec}def}{/SetCmyk_5
/setcmykcolor ld}ifelse}ifelse}{/setcmykcolor{create_cmyk_color
/separate_set_color dexec/$ffpnt xd}bd/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse
/currentcmykcolor where{pop/GetCmyk/currentcmykcolor ld}{/GetCmyk{GetRgb
rgb2cmyk}bd}ifelse/setoverprint where{pop}{/setoverprint{/CurrentOverprint xd}
bd}ifelse/currentoverprint where{pop}{/currentoverprint{CurrentOverprint}bd}
ifelse/colorimage where{pop/ColorImage{colorimage}def}{/ColorImage{/ncolors xd
/$multi xd $multi true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch
pop abs{daqR pop daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop
pop exch pop abs{daqC pop daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd
{dataaq ncolors dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv
getinterval pop}{4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
$dat 4 index 3 add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1
roll put}for $dat 0 $dat length ncolors idiv getinterval}if}ifelse}image}
ifelse}bd}ifelse/currentcmykcolor{GetCmyk}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SeparationMode/Composite eq{IMAGE}{dup
type/dicttype eq{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8
eq exch/BitsPerComponent get 1 eq or currentcolorspace 0 get DocGrayScaleSpace
eq and{SeparationPlateName(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get
abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{
SeparationPlateName(Black)eq{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}
repeat}ifelse}{IMAGE}ifelse}ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/$fm 0
def/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SeparationMode/Composite eq{
true}{$Psc 0 ne or $ink_5 3 eq or}ifelse{0 J 0 j[]0 d FillOverprint
safe_setoverprint FillColor/separate_set_color dexec pop $ctm setmatrix 72 1000
div dup matrix scale dup concat dup Bburx exch Bbury exch itransform ceiling
cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform floor cvi
/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry wfill}
ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if
FillOverprint safe_setoverprint $fil 1 eq{CorelPtrnDoFill}{$fil 2 eq
{gradient_fill}{$fil 3 eq{@Pf}{get_simulate_devicen FillColor/ColorModel get
/DeviceN eq and{0 1 FillColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if
FillColor/get_ink_as_spot dexec/set_color dexec @gs wfill @gr}for}{FillColor
/separate_set_color dexec{wfill}{@np}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{
$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp F}bd/S{matrix currentmatrix $ctm
setmatrix $SDF{$SCF $SCA $SCP @ss}if OutlineOverprint safe_setoverprint
get_simulate_devicen OutlineColor/ColorModel get/DeviceN eq and{0 1
OutlineColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if OutlineColor
/get_ink_as_spot dexec/set_color dexec matrix currentmatrix $ptm concat @gs
stroke @gr setmatrix}for}{OutlineColor/separate_set_color dexec{matrix
currentmatrix $ptm concat stroke setmatrix}{@np}ifelse}ifelse $SDF{$dsf $dsa
$dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{@cp B}bd/_E{5 array
astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring pop}bd/@sm{/$ctm
$ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd/Bbllx xd}bd/@c{@cp}bd
/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd/tcc{@cc}def/@B{@gs S
@gr F}bd/@b{@cp @B}bd/init_separation{/SeparationMode where{pop}{
/SeparationMode/Composite def}ifelse/SeparationPlateName where{pop}{
/SeparationPlateName null def}ifelse/SeparateInColor where{pop}{
/SeparateInColor false def}ifelse SeparationMode/Composite eq{
/SeparationPlateIndex -1 def}{/SeparationPlateIndex 4 def}ifelse/CmykPlates[
/Cyan/Magenta/Yellow/Black]def 0 1 3{dup CmykPlates exch get
SeparationPlateName eq{/SeparationPlateIndex xd exit}if pop}for
/CurrentInkName_5 SeparationPlateName def/$ink_5 SeparationPlateIndex def
SeparationMode/OnHost eq{/SepMode_5 2 def}{/SepMode_5 0 def}ifelse/SepsColor
SeparateInColor def}bd/init_separation_from_legacy{EpsFile{/SepMode_5 where{
pop SepMode_5 2 eq{/SeparationMode/OnHost def}{/SeparationMode/Composite def}
ifelse}if/CurrentInkName_5 where{pop/SeparationPlateName CurrentInkName_5 def}
if/$ink_5 where{pop/SeparationPlateIndex $ink_5 def}if/SepsColor where{pop
/SeparateInColor SepsColor def}if}if}bd init_separation_from_legacy/@whi{@gs
-72000 dup m -72000 72000 l 72000 dup l 72000 -72000 l @cp 1 SetGry fill @gr}
bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec cvx]cvx settransfer @whi}
bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}bd/@eax{/deflevel deflevel
dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}ifelse}bd/eax{{exec}forall}
bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict/pdfmark known not{/pdfmark
/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}ifelse}bd
%----------------------------------------------------------------------------
% Raster images support
/set_image_clipping{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index
3 index l 3 index 3 index l clip pop pop pop pop}bd/set_image_parameters{/$frg
xd/$bkg xd/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd}bd
/output_image{/@cc xd @sm @gs set_image_clipping set_image_parameters
SeparationMode/OnHost eq EpsFile and{separate_output_image}{
output_composite_image}ifelse @gr $ctm setmatrix}bd/output_composite_image{
DocPsLevel 3 eq MaskedImage true eq and{output_masked_image}{$bts 1 gt
DocPsLevel 2 eq DocPsLevel 3 eq or and{DevicenImage{output_devicen_image}{
output_color_image}ifelse}{$bts 1 eq{output_monochrome_image}{
output_color_image_level1}ifelse}ifelse}ifelse}bd/separate_output_image{@gs
$bts 1 gt{separate_output_color_image}{separate_output_monochrome_image}ifelse
@gr not{currentoverprint not{1.0 SetGry wfill}if}if @np}bd/set_decode_filter{
ImageCompression/JPEG eq{/DCTDecode filter}{ImageCompression/RLE eq{
/RunLengthDecode filter}{ImageCompression/LZW eq{/LZWDecode filter}if}ifelse}
ifelse}bd/create_datasource{currentfile DevicenImage not get_ps_level 2 gt or{
/ASCII85Decode filter}if set_decode_filter}bd/set_image_strip_parameters{
/stripRows xd/numPlanes xd/stripBuffer $wid $bts mul $ncl mul stripRows mul 8
div ceiling cvi dup 65535 gt{pop $ncl $bts mul}if string def DevicenImage{
/readstrip{DataSource stripBuffer readhexstring pop}bd}{/readstrip{DataSource
stripBuffer readstring pop}bd}ifelse/stripHeight $lly $ury sub stripRows mul
$hei div def/stripOutBuffer $wid stripRows mul numPlanes mul 65535 min string
def/strip_img_dict 8 dict def strip_img_dict begin/ImageType 1 def/Width $wid
def/Height stripRows def/BitsPerComponent $bts def/Decode[numPlanes{0 1}
repeat]def/ImageMatrix[$wid 0 0 stripRows neg 0 $hei 0 gt{stripRows}{0}ifelse]
def/DataSource stripOutBuffer def end}bd/separate_output_color_image{
/plateContent false def $ncl 1 eq{SeparationPlateName/Black eq{
output_color_image/plateContent true def}if}{@np/DataSource create_datasource
def SeparateInColor{DocCmykSpace setcolorspace/numPlanes 4 def}{
DocGrayScaleSpace setcolorspace/numPlanes 1 def}ifelse/stripRows 65535 $wid
$bts mul $ncl numPlanes max mul 8 div div floor cvi 1 max def numPlanes
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{numPlanes $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 $wid stripRows mul 1 sub{/pixelIndex xd stripBuffer
pixelIndex $ncl mul $ncl getinterval{255 div}forall DevicenImage{
ImageDevicenSpace create_devicen_color}{$ncl 3 eq{create_rgb_color}{
create_cmyk_color}ifelse}ifelse/separate_color dexec{/plateContent true def
begin color aload pop end}{pop numPlanes[numPlanes 1 eq{1}{0}ifelse]cvx repeat
}ifelse numPlanes array astore/pixelSepIndex pixelIndex numPlanes mul def
/posColorant 0 def{stripOutBuffer pixelSepIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}ifelse plateContent}bd/separate_output_monochrome_image{
SeparationPlateName/Black eq{output_monochrome_image true}{false}ifelse}bd
/output_monochrome_image{$frg 1 eq{OutlineOverprint safe_setoverprint
ImageForegroundColor/separate_set_color dexec{1}{0}ifelse/$frg xd}{/$frg false
def}ifelse $bkg 1 eq{@gs $ctm setmatrix F @gr}if @np/$dat $wid $bts mul 8 div
ceiling cvi 65535 min string def $bkg $frg add 1 ge{$SDF{$SCF $SCA $SCP @ss}if
$llx $lly Tl $urx $llx sub $ury $lly sub scale $bkg 1 eq{FillColor
/separate_set_color dexec pop}if $wid $hei abs $bts 1 eq{$bkg 1 ge}{$bts 1 ge}
ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts 1 eq
{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}repeat}
ifelse}bd/output_color_image_level1{@np $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min string def $msimage
false eq $ncl 1 eq or{/@cc load false $ncl ColorImage}{$wid $bts mul 8 div
ceiling cvi $ncl 3 eq{dup dup/$dat1 exch string def/$dat2 exch string def
/$dat3 exch string def/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch
string def/$dat2 exch string def/$dat3 exch string def/$dat4 exch string def
/@cc1 load/@cc2 load/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse
$SDF{$dsf $dsa $dsp @ss}if}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2
{currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring
pop}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def
/ImageCompression/None def/MaskedImage false def/DevicenImage false def
/output_color_image{@np $ncl 1 eq{DocGrayScaleSpace}{$ncl 3 eq{DocRgbSpace}
{DocCmykSpace}ifelse}ifelse setcolorspace/$dat $wid $bts mul $ncl mul 8 div
ceiling cvi 65535 min string def $ngx $llx $lly Tl $urx $llx sub $ury $lly sub
scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def currentdict
end image $SDF{$dsf $dsa $dsp @ss}if}bd/simulate_devicen_image{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def/DataSource create_datasource def
/stripRows 65535 $wid $bts mul $ncl mul 8 div div floor cvi 1 max def 1
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{1 $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs $llx $t_lly Tl $urx $llx sub $t_ury $t_lly sub scale 0 1 $ncl
1 sub{@gs/inkIndex exch def 0 1 stripOutBuffer length 1 sub{dup $ncl mul
inkIndex add stripBuffer exch get stripOutBuffer 3 1 roll put}for[/Separation
colorantNames inkIndex get altColorSpace{$ncl 1 sub{0}repeat $ncl inkIndex roll
tintProc}]setcolorspace inkIndex 0 gt{true setoverprint}if strip_img_dict image
@gr}for @gr}for $SDF{$dsf $dsa $dsp @ss}if}bd/output_devicen_image_alt{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def altColorSpace DocCmykSpace eq{
/numAltChannels 4 def}{altColorSpace DocRgbSpace eq{/numAltChannels 3 def}{
/numAltChannels 1 def}ifelse}ifelse/DataSource create_datasource def
altColorSpace setcolorspace/stripRows 65535 $wid $bts mul $ncl numAltChannels
max mul 8 div div floor cvi 1 max def numAltChannels stripRows
set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling cvi 1 sub
def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight stripIndex
mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi def
stripIndex maxStripIndex eq{numAltChannels $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 stripBuffer length $ncl div cvi 1 sub{/pixelIndex xd
stripBuffer pixelIndex $ncl mul $ncl getinterval{255 div}forall tintProc exec
numAltChannels array astore/pixelAltIndex pixelIndex numAltChannels mul def
/posColorant 0 def{stripOutBuffer pixelAltIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}bd/output_devicen_image_native{@np $ngx ImageDevicenSpace
setcolorspace/scanline $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def/readscanline{currentfile scanline readhexstring pop}bind def $llx
$lly Tl $urx $llx sub $ury $lly sub scale 8 dict begin/ImageType 1 def/Width
$wid def/Height $hei abs def/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]
def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource{
readscanline}def currentdict end image $SDF{$dsf $dsa $dsp @ss}if}bd
/output_devicen_image{Level3{output_devicen_image_native}{get_simulate_devicen
{simulate_devicen_image}{output_devicen_image_alt}ifelse}ifelse}bd
/output_masked_image{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def $ngx DevicenImage{ImageDevicenSpace}{$ncl 1 eq{DocGrayScaleSpace}{
$ncl 3 eq{DocRgbSpace}{DocCmykSpace}ifelse}ifelse}ifelse setcolorspace $llx
$lly Tl $urx $llx sub $ury $lly sub scale/ImageDataDict 8 dict def
ImageDataDict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def end
/MaskedImageDict 7 dict def MaskedImageDict begin/ImageType 3 def
/InterleaveType 3 def/MaskDict ImageMaskDict def/DataDict ImageDataDict def end
MaskedImageDict image $SDF{$dsf $dsa $dsp @ss}if}bd/set_image_mask{/$mbts xd
/$mhei xd/$mwid xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def
/Width $mwid def/Height $mhei abs def/BitsPerComponent $mbts def/DataSource
maskstream def/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]
def/Decode[1 0]def end}bd/@daq{dup type/arraytype eq{aload pop}if}bd
/skip_image_body{8 rp/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd
/$wid xd DevicenImage not ImageCompression/JPEG eq or ImageCompression/RLE eq
or ImageCompression/LZW eq or{create_datasource flushfile}{/scanline $wid $bts
mul $ncl mul 8 div ceiling cvi dup 65535 gt{pop $bts $ncl mul}if string def
/upperBound $wid $hei mul $bts mul $ncl mul scanline length div cvi 1 sub def 0
1 upperBound{pop currentfile scanline readhexstring pop pop}for}ifelse}bd
/disable_raster_output{deflevel 0 eq{@rs}if/output_image load
/output_image_original exch def/output_image/skip_image_body load def
globaldict begin/bSkipDeviceNImage true def end deflevel 0 eq{@sv}if}def
/enable_raster_output{deflevel 0 eq{@rs}if/bSkipDeviceNImage where{
/bSkipDeviceNImage undef/output_image/output_image_original load def}if
deflevel 0 eq{@sv}if}def
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel18Dict begin
@BeginSysCorelDict
/$dcm matrix currentmatrix def
@ssa
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%%ViewingOrientation: 1 0 0 1
%%BoundingBox: 0 0 595 841
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
112.86907 648.74126 140.82151 683.67543 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
140.76879 671.77191 m
135.70809 671.75717 L
134.99546 676.27871 L
134.32479 676.94513 133.47950 677.47124 132.46044 677.85732 C
131.44110 678.24255 130.23950 678.43389 128.85591 678.42992 C
125.90192 678.42113 123.63137 677.34142 122.04425 675.19134 C
120.45685 673.04098 119.66854 670.24035 119.67874 666.78917 C
119.68214 665.59946 L
119.69263 662.14857 120.49370 659.34454 122.08592 657.18879 C
123.67786 655.03134 125.91978 653.95814 128.81169 653.96693 C
130.14850 653.97005 131.37222 654.16847 132.48283 654.56050 C
133.59317 654.95169 134.45065 655.48318 135.05499 656.15386 C
135.74126 660.68022 L
140.80167 660.69496 L
140.82151 653.97883 L
139.45776 652.38888 137.71672 651.12123 135.59754 650.17417 C
133.47780 649.22769 131.10463 648.74948 128.47720 648.74154 C
123.92220 648.72794 120.18614 650.29521 117.26957 653.44280 C
114.35329 656.59039 112.88750 660.63543 112.87304 665.57962 C
112.86935 666.72227 L
112.85518 671.65058 114.28923 675.70469 117.17121 678.88460 C
120.05348 682.06507 123.78756 683.66154 128.37402 683.67515 C
131.00088 683.68309 133.37348 683.21225 135.49068 682.26180 C
137.60759 681.31219 139.36054 680.05417 140.74894 678.48803 C
140.76879 671.77191 L
@c
F

@rax %Note: Object
143.83757 648.81014 166.88069 674.29162 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
153.48529 653.71550 m
154.48309 653.71861 155.38989 653.93631 156.20513 654.36945 C
157.02038 654.80343 157.65392 655.34598 158.10548 655.99767 C
158.09414 659.74025 L
154.71439 659.73033 L
153.30841 659.72551 152.24343 659.39329 151.51946 658.73452 C
150.79550 658.07433 150.43493 657.28233 150.43748 656.36022 C
150.44003 655.52825 150.71017 654.87940 151.24876 654.41225 C
151.78677 653.94510 152.53257 653.71238 153.48529 653.71550 C
@c
159.23679 649.30961 m
159.05395 649.71723 158.89380 650.13619 158.75660 650.56706 C
158.61940 650.99820 158.51197 651.43106 158.43515 651.87071 C
157.65137 650.96079 156.69694 650.22406 155.57244 649.66139 C
154.44765 649.09956 153.15931 648.81524 151.70769 648.81043 C
149.30334 648.80362 147.39222 649.45219 145.97461 650.75556 C
144.55644 652.05978 143.84494 653.83795 143.83786 656.09150 C
143.83134 658.38983 144.74806 660.16885 146.58945 661.42970 C
148.43055 662.69027 151.13537 663.32580 154.70419 663.33685 C
158.08394 663.34677 L
158.07628 665.75112 L
158.07288 666.93061 157.72989 667.84422 157.04787 668.49250 C
156.36557 669.14050 155.35899 669.46280 154.02841 669.45912 C
153.27213 669.45685 152.59946 669.36728 152.01014 669.19153 C
151.42082 669.01635 150.94517 668.80658 150.58318 668.56365 C
150.15969 665.93140 L
145.16986 665.91666 L
145.17638 671.36060 L
146.38365 672.18038 147.76923 672.87288 149.33254 673.43698 C
150.89584 674.00050 152.59975 674.28595 154.44482 674.29134 C
157.48441 674.30013 159.95480 673.56255 161.85713 672.07946 C
163.75918 670.59496 164.71474 668.47691 164.72268 665.72476 C
164.75244 655.58608 L
164.75386 655.20794 164.75811 654.85219 164.76718 654.51997 C
164.77540 654.18746 164.80290 653.86970 164.84939 653.56753 C
166.86879 653.30107 L
166.88069 649.33200 L
159.23679 649.30961 L
@c
F

@rax %Note: Object
168.78813 649.34050 186.20759 674.38063 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
169.18894 653.30957 m
172.36261 654.00009 L
172.31754 669.21902 L
168.80003 669.88942 L
168.78813 673.88145 L
178.47326 673.91008 L
178.77883 670.32737 L
179.34945 671.59899 180.08787 672.59169 180.99298 673.30517 C
181.89808 674.01836 182.94803 674.37694 184.14255 674.38035 C
184.49036 674.38148 184.85688 674.35597 185.24296 674.30409 C
185.62876 674.25222 185.94992 674.18901 186.20759 674.11474 C
185.52217 668.07865 L
182.79978 668.13902 L
181.83231 668.13591 181.03124 667.94428 180.39742 667.56444 C
179.76302 667.18431 179.28085 666.64658 178.95033 665.94954 C
178.98548 654.01937 L
182.16340 653.34756 L
182.17502 649.37849 L
169.20113 649.34050 L
169.18894 653.30957 L
@c
F

@rax %Note: Object
187.05061 649.39238 200.51518 683.88151 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
187.06252 679.85943 m
187.05061 683.85175 L
197.21197 683.88151 L
197.30324 654.07124 L
200.50356 653.39943 L
200.51518 649.43036 L
187.49594 649.39238 L
187.48375 653.36145 L
190.67981 654.05197 L
190.60271 679.18961 L
187.06252 679.85943 L
@c
F

@rax %Note: Object
201.91975 648.99468 223.45143 674.46595 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
213.61691 669.36217 m
212.39206 669.35877 211.42517 668.88709 210.71735 667.94712 C
210.00954 667.00772 209.57443 665.77465 209.41285 664.24649 C
209.48088 664.13367 L
217.60129 664.15748 L
217.59959 664.74737 L
217.59534 666.15279 217.26312 667.27502 216.60321 668.11238 C
215.94302 668.94973 214.94721 669.36643 213.61691 669.36217 C
@c
213.61691 648.99496 m
210.07843 648.98476 207.24690 650.11068 205.12375 652.37272 C
202.99975 654.63449 201.93279 657.51250 201.92258 661.00507 C
201.92003 661.91244 L
201.90898 665.55666 202.90167 668.56195 204.89868 670.92633 C
206.89512 673.29071 209.57953 674.47106 212.95191 674.46567 C
216.26334 674.47559 218.83663 673.48517 220.67235 671.49439 C
222.50778 669.50391 223.43102 666.80731 223.44123 663.40488 C
223.45143 659.79865 L
208.79915 659.75499 L
208.75380 659.61950 L
208.87965 658.00148 209.42391 656.67260 210.38769 655.63200 C
211.35061 654.59112 212.65654 654.07351 214.30488 654.07833 C
215.77153 654.08287 216.98844 654.23310 217.95506 654.53159 C
218.92224 654.82923 219.97928 655.29723 221.12674 655.93559 C
222.93099 651.85824 L
221.91987 651.05376 220.61027 650.37742 219.00132 649.82778 C
217.39266 649.27928 215.59748 649.00120 213.61691 648.99496 C
@c
F

@rax %Note: Object
225.46176 649.06356 239.51849 680.68006 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
234.34809 680.68006 m
234.36595 674.08129 L
238.67546 674.09405 L
238.68935 669.44438 L
234.37984 669.43162 L
234.41669 656.93310 L
234.41924 655.98066 234.61795 655.30120 235.01254 654.89414 C
235.40655 654.48652 235.93635 654.28441 236.60192 654.28668 C
237.05546 654.28724 237.45260 654.30765 237.79247 654.34649 C
238.13291 654.38504 238.51417 654.45080 238.93739 654.54321 C
239.51849 649.75805 L
238.77836 649.52957 238.04532 649.35666 237.32022 649.24129 C
236.59427 649.12592 235.80822 649.06696 234.96180 649.06384 C
232.67820 649.05789 230.91817 649.67981 229.68227 650.93131 C
228.44608 652.18280 227.82416 654.16961 227.81622 656.89115 C
227.77909 669.41178 L
225.47565 669.40129 L
225.46176 674.05124 L
227.76548 674.06145 L
227.74762 680.66022 L
234.34809 680.68006 L
@c
F

@rax %Note: Object
240.85276 649.11713 264.01323 674.58983 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
247.47732 661.60091 m
247.48413 659.36296 247.88239 657.56750 248.67269 656.21679 C
249.46328 654.86551 250.73518 654.19285 252.48954 654.19824 C
254.19827 654.20391 255.44750 654.88706 256.23723 656.25109 C
257.02724 657.61398 257.41899 659.40718 257.41247 661.63039 C
257.41077 662.10690 L
257.40425 664.28447 256.99833 666.05924 256.19272 667.43348 C
255.38740 668.80687 254.12258 669.49115 252.39883 669.48605 C
250.67509 669.48123 249.42161 668.78929 248.63981 667.41080 C
247.85717 666.03203 247.46939 664.25499 247.47591 662.07742 C
247.47732 661.60091 L
@c
240.85304 662.05757 m
240.84227 665.71682 241.85764 668.71757 243.89943 671.06013 C
245.94180 673.40211 248.76964 674.57877 252.38381 674.58954 C
256.01301 674.60003 258.85531 673.44378 260.91128 671.12192 C
262.96724 668.79893 264.00076 665.80016 264.01153 662.12617 C
264.01294 661.64967 L
264.02372 657.95953 263.00806 654.95169 260.96598 652.62387 C
258.92391 650.29748 256.10315 649.12819 252.50457 649.11742 C
248.86035 649.10665 246.01039 650.25865 243.95443 652.57342 C
241.89817 654.88961 240.86494 657.89150 240.85417 661.58107 C
240.85304 662.05757 L
@c
F

@rax %Note: Object
265.30441 649.63587 293.45783 674.68110 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
265.70551 653.60466 m
268.87890 654.29518 L
268.83383 669.51439 L
265.31631 670.18479 L
265.30441 674.17654 L
274.98954 674.20517 L
275.29483 670.69049 L
276.10753 671.94765 277.11014 672.92646 278.30324 673.62520 C
279.49521 674.32422 280.83231 674.67600 282.31483 674.68082 C
284.79430 674.68791 286.73206 673.91461 288.12813 672.36151 C
289.52362 670.80813 290.22690 668.36806 290.23654 665.04104 C
290.26828 654.35868 L
293.44564 653.68687 L
293.45783 649.71780 L
280.80113 649.67981 L
280.78923 653.64888 L
283.62246 654.33855 L
283.59099 664.99880 L
283.58617 666.64687 283.24970 667.81417 282.58271 668.50044 C
281.91487 669.18671 280.90857 669.52743 279.56239 669.52375 C
278.68564 669.52120 277.89931 669.34091 277.20567 668.98375 C
276.51033 668.62602 275.93008 668.12145 275.46321 667.46976 C
275.50176 654.31446 L
278.18079 653.64123 L
278.19241 649.67216 L
265.71742 649.63587 L
265.70551 653.60466 L
@c
F

@rax %Note: Object
140.02611 621.46035 158.67071 640.11373 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
147.63033 640.08142 m
147.63685 637.86217 L
145.67074 637.47751 L
145.69909 627.89357 L
145.70249 626.68233 146.03074 625.77780 146.68413 625.17827 C
147.33751 624.57931 148.23184 624.28224 149.36683 624.28564 C
150.51827 624.28847 151.42110 624.58923 152.07534 625.18876 C
152.72929 625.78687 153.05471 626.69650 153.05102 627.91569 C
153.02268 637.49962 L
151.06677 637.87238 L
151.06025 640.09162 L
158.66419 640.11373 L
158.67071 637.89449 L
156.70488 637.51039 L
156.73323 627.92646 L
156.73946 625.86652 156.06482 624.27487 154.71071 623.15348 C
153.35631 622.03124 151.57757 621.46687 149.37506 621.46063 C
147.18104 621.45326 145.40740 622.00772 144.05471 623.12173 C
142.70230 624.23546 142.02283 625.82287 142.01660 627.88280 C
141.98854 637.46674 L
140.03235 637.83921 L
140.02611 640.05846 L
141.98088 640.06413 L
145.66280 640.07490 L
147.63033 640.08142 L
@c
F

@rax %Note: Object
159.46016 621.75572 175.11222 635.68006 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
159.68324 623.96249 m
161.44753 624.34602 L
161.42230 632.80715 L
159.46668 633.17962 L
159.46016 635.39972 L
164.84485 635.41559 L
165.01465 633.46110 L
165.46649 634.16069 166.02378 634.70409 166.68709 635.09301 C
167.35011 635.48220 168.09335 635.67751 168.91739 635.67978 C
170.29587 635.68403 171.37361 635.25402 172.14945 634.39087 C
172.92529 633.52715 173.31619 632.17049 173.32157 630.32088 C
173.33915 624.38117 L
175.10570 624.00869 L
175.11222 621.80135 L
168.07578 621.78094 L
168.06926 623.98772 L
169.64447 624.37039 L
169.62690 630.29707 L
169.62435 631.21323 169.43726 631.86236 169.06620 632.24419 C
168.69515 632.62488 168.13559 632.81509 167.38724 632.81310 C
166.89969 632.81169 166.46258 632.71106 166.07650 632.51206 C
165.69043 632.31392 165.36756 632.03301 165.10819 631.67074 C
165.13002 624.35679 L
166.61906 623.98346 L
166.62557 621.77669 L
159.68948 621.75572 L
159.68324 623.96249 L
@c
F

@rax %Note: Object
175.94220 621.80447 183.39732 641.49307 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
181.58202 638.73099 m
177.89981 638.72022 L
177.89159 641.48230 L
181.57380 641.49307 L
181.58202 638.73099 L
@c
176.16529 624.01153 m
177.94205 624.39477 L
177.91710 632.85591 L
175.94844 633.22866 L
175.94220 635.44847 L
181.59194 635.46491 L
181.62454 624.40554 L
183.39109 624.03307 L
183.39732 621.82602 L
176.17181 621.80447 L
176.16529 624.01153 L
@c
F

@rax %Note: Object
183.59887 621.84387 197.55269 635.51452 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
189.79739 633.27175 m
188.51159 633.02825 L
190.33285 626.92980 L
190.57635 625.64485 L
190.65203 625.64485 L
190.91310 626.93150 L
192.67313 633.02769 L
191.36098 633.27600 L
191.35446 635.49581 L
197.54617 635.51452 L
197.55269 633.29471 L
196.36781 633.10224 L
192.37805 621.85408 L
188.85997 621.84387 L
184.79140 633.06765 L
183.60539 633.25304 L
183.59887 635.47285 L
189.79087 635.49156 L
189.79739 633.27175 L
@c
F

@rax %Note: Object
198.05953 621.62674 210.03080 635.78778 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
204.20164 632.95002 m
203.52047 632.94775 202.98331 632.68583 202.58986 632.16397 C
202.19613 631.64126 201.95433 630.95556 201.86447 630.10630 C
201.90246 630.04309 L
206.41691 630.05584 L
206.41606 630.38381 L
206.41380 631.16589 206.22898 631.78980 205.86189 632.25496 C
205.49509 632.72098 204.94120 632.95200 204.20164 632.95002 C
@c
204.56306 621.62702 m
202.59581 621.62135 201.02173 622.24668 199.84110 623.50441 C
198.66019 624.76186 198.06690 626.36202 198.06123 628.30403 C
198.05981 628.80803 L
198.05386 630.83424 198.60576 632.50498 199.71609 633.82025 C
200.82614 635.13411 202.31830 635.79090 204.19313 635.78750 C
206.03452 635.79317 207.46517 635.24239 208.48592 634.13603 C
209.50611 633.02910 210.01946 631.52986 210.02485 629.63802 C
210.03080 627.63279 L
201.88431 627.60926 L
201.85937 627.53357 L
201.92939 626.63414 202.23184 625.89458 202.76759 625.31660 C
203.30306 624.73805 204.02901 624.45033 204.94573 624.45288 C
205.76069 624.45600 206.43761 624.53906 206.97506 624.70488 C
207.51250 624.87014 208.10041 625.13065 208.73820 625.48526 C
209.74139 623.21868 L
209.17928 622.77137 208.45106 622.39521 207.55672 622.08935 C
206.66239 621.78435 205.66431 621.62986 204.56306 621.62702 C
@c
F

@rax %Note: Object
211.27068 621.91417 220.95524 635.83597 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
211.49348 624.12123 m
213.25776 624.50476 L
213.23282 632.96589 L
211.27720 633.33836 L
211.27068 635.55846 L
216.65537 635.57405 L
216.82488 633.58243 L
217.14236 634.28882 217.55282 634.84101 218.05597 635.23814 C
218.55940 635.63443 219.14277 635.83342 219.80721 635.83569 C
220.00054 635.83625 220.20463 635.82180 220.41865 635.79317 C
220.63351 635.76369 220.81181 635.72910 220.95524 635.68743 C
220.57398 632.33178 L
219.06085 632.36551 L
218.52255 632.36409 218.07751 632.25723 217.72488 632.04605 C
217.37254 631.83487 217.10409 631.53581 216.92041 631.14860 C
216.94025 624.51553 L
218.70652 624.14220 L
218.71304 621.93515 L
211.50000 621.91417 L
211.49348 624.12123 L
@c
F

@rax %Note: Object
221.92724 621.69732 233.15584 635.83455 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
232.63597 630.93175 m
230.16444 630.92466 L
229.76844 632.62573 L
229.51559 632.82643 229.19783 632.99367 228.81487 633.12746 C
228.43191 633.26098 228.00926 633.32702 227.54693 633.32561 C
226.89950 633.32334 226.38728 633.17707 226.00998 632.88595 C
225.63213 632.59455 225.44419 632.23002 225.44561 631.79263 C
225.44674 631.38047 225.62844 631.03890 225.99071 630.76734 C
226.35298 630.49465 227.07694 630.25483 228.16176 630.04876 C
229.85263 629.71710 231.10668 629.22671 231.92419 628.57786 C
232.74142 627.92787 233.15216 627.03184 233.15556 625.88891 C
233.15896 624.66123 232.63427 623.65748 231.58205 622.87710 C
230.52869 622.09587 229.14085 621.70328 227.41739 621.69761 C
226.36630 621.69449 225.40110 621.84529 224.52180 622.14973 C
223.64220 622.45446 222.86154 622.89071 222.17868 623.46076 C
222.13191 626.52501 L
224.70435 626.53209 L
225.21430 624.75534 L
225.43313 624.57137 225.73219 624.43559 226.11061 624.34828 C
226.48932 624.26211 226.88447 624.21817 227.29635 624.21959 C
228.04469 624.22186 228.61389 624.35735 229.00394 624.62806 C
229.39398 624.89877 229.58844 625.26416 229.58702 625.72677 C
229.58589 626.13014 229.38718 626.47909 228.99118 626.77191 C
228.59518 627.06501 227.86724 627.32353 226.80737 627.54746 C
225.20069 627.87061 223.98661 628.35222 223.16485 628.99342 C
222.34337 629.63433 221.93093 630.50910 221.92753 631.61887 C
221.92413 632.76208 222.39213 633.74910 223.33124 634.58050 C
224.27036 635.41106 225.61030 635.82917 227.35049 635.83427 C
228.40980 635.83767 229.41269 635.69764 230.35918 635.41474 C
231.30595 635.13128 232.04863 634.76787 232.58806 634.32425 C
232.63597 630.93175 L
@c
F

@rax %Note: Object
234.47622 621.98391 241.93134 641.67307 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
240.11603 638.91128 m
236.43354 638.90022 L
236.42532 641.66230 L
240.10781 641.67307 L
240.11603 638.91128 L
@c
234.69902 624.19096 m
236.47606 624.57506 L
236.45083 633.03619 L
234.48274 633.40866 L
234.47622 635.62876 L
240.12567 635.64520 L
240.15827 624.58583 L
241.92482 624.21250 L
241.93134 622.00545 L
234.70554 621.98391 L
234.69902 624.19096 L
@c
F

@rax %Note: Object
243.03203 621.76110 250.83609 639.01162 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
247.96148 639.01162 m
247.97140 635.67043 L
250.36753 635.67751 L
250.37490 633.09231 L
247.97906 633.08494 L
247.99946 626.13666 L
248.00088 625.60687 248.11172 625.22844 248.33083 625.00224 C
248.55024 624.77603 248.84447 624.66321 249.21439 624.66491 C
249.46668 624.66548 249.68750 624.67710 249.87657 624.69780 C
250.06564 624.71934 250.27767 624.75619 250.51323 624.80693 C
250.83609 622.14690 L
250.42450 622.01991 250.01717 621.92438 249.61380 621.85975 C
249.21043 621.79569 248.77332 621.76280 248.30277 621.76139 C
247.03313 621.75770 246.05461 622.10381 245.36750 622.79943 C
244.68009 623.49534 244.33427 624.60028 244.32973 626.11313 C
244.30904 633.07417 L
243.03940 633.06765 L
243.03203 635.65313 L
244.30167 635.65965 L
244.29175 639.00113 L
247.96148 639.01162 L
@c
F

@rax %Note: Object
251.70435 616.53600 266.30107 635.72428 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
266.30107 633.50419 m
265.02775 633.31172 L
260.04841 620.01836 L
259.65581 619.03389 259.13083 618.20759 258.47291 617.54202 C
257.81499 616.87587 256.82173 616.54025 255.49342 616.53600 C
255.46422 616.53600 L
255.16403 616.53685 254.88170 616.56151 254.61666 616.60998 C
254.34340 616.65959 254.02167 616.72989 253.65175 616.82117 C
254.07213 619.50898 L
254.19005 619.49197 254.31194 619.47609 254.43836 619.45880 C
254.56422 619.44321 254.67335 619.43443 254.76605 619.43443 C
255.37946 619.43669 255.85002 619.58721 256.17713 619.88683 C
256.50425 620.18617 256.75512 620.55950 256.93058 621.00454 C
257.34359 622.04003 L
252.98476 633.26296 L
251.71058 633.46110 L
251.70435 635.68120 L
258.38759 635.70132 L
258.39411 633.48123 L
256.86907 633.22441 L
258.75156 627.78217 L
258.94346 626.79940 L
259.01915 626.78693 L
261.15676 633.23717 L
259.61726 633.48491 L
259.61074 635.70472 L
266.29455 635.72428 L
266.30107 633.50419 L
@c
F

@rax %Note: Object
177.21638 714.10082 230.39490 763.63370 @E
/$fm 1 def
 0 O 0 @g
0.9961 0.9961 0.9961  create_rgb_color set_solid_fill
230.38724 743.83370 m
219.57449 732.17310 L
224.24882 752.57036 L
218.02337 749.27452 L
213.35528 761.97175 L
208.68718 749.27452 L
202.46202 752.57036 L
207.13635 732.17310 L
196.09285 744.08230 L
195.37569 738.88214 L
186.32069 741.52290 L
190.49953 731.64557 L
186.66340 730.59902 L
199.60441 720.93600 L
214.32699 726.61493 223.56255 724.96517 228.97446 722.77115 C
228.17792 719.66154 226.99984 716.77020 225.44419 714.10082 C
225.00850 714.34006 224.55184 714.57137 224.06712 714.79106 C
222.18633 715.64372 219.92627 716.33537 217.20784 716.73874 C
216.16214 716.89380 215.04586 717.00435 213.86098 717.06699 C
213.53017 717.08457 213.19427 717.09817 212.85241 717.10781 C
212.20157 717.12624 211.53033 717.12964 210.83783 717.11773 C
207.78066 717.06501 204.31446 716.71039 200.37572 715.95496 C
200.22718 715.92633 200.08290 715.90252 199.93606 715.87559 C
199.22060 715.74576 198.52299 715.63691 197.84381 715.54791 C
187.95572 714.25474 181.85216 717.18265 178.19263 720.52214 C
177.81222 721.61688 177.48567 722.72608 177.21638 723.85030 C
180.88526 720.02211 187.35052 716.66759 198.06690 720.37247 C
183.58951 731.18268 L
188.62498 732.55578 L
183.93222 743.64831 L
194.23389 740.64359 L
195.12992 747.13833 L
204.65348 736.86784 L
200.45565 755.18447 L
207.94139 751.22135 L
212.50517 763.63370 L
213.10498 763.55461 213.70365 763.46816 214.30091 763.37490 C
218.76917 751.22135 L
226.25490 755.18447 L
222.05764 736.86784 L
230.39490 745.85934 L
230.38724 743.83370 L
@c
F

@rax %Note: Object
178.83921 703.82693 222.46980 718.79981 @E
/$fm 1 def
 0 O 0 @g
0.9961 0.9961 0.9961  create_rgb_color set_solid_fill
198.02976 713.24816 m
187.83128 712.43320 182.08233 715.27748 178.83921 718.79981 C
179.36476 717.50721 179.96683 716.23616 180.64828 714.98778 C
180.68400 714.92230 180.72142 714.85852 180.75770 714.79361 C
183.79474 712.56416 188.89682 710.44838 197.46964 709.75446 C
206.46879 709.02624 212.38923 706.60290 216.28205 703.82693 C
218.63679 705.64394 220.70013 707.63981 222.46980 709.81143 C
218.06306 712.32406 210.61276 714.25389 198.02976 713.24816 C
@c
F

@rax %Note: Object
180.75770 696.89452 216.28205 714.79361 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
180.75770 714.79361 m
185.62507 705.99288 193.44643 701.00674 202.48611 697.07424 C
203.02271 696.84094 203.60693 696.82876 204.14098 697.07424 C
206.79165 698.30277 209.73600 699.52649 212.22000 701.03991 C
213.65773 701.91723 215.01128 702.84643 216.28205 703.82693 C
212.38923 706.60290 206.46879 709.02624 197.46964 709.75446 C
188.89682 710.44838 183.79474 712.56416 180.75770 714.79361 C
@c
F

@rax %Note: Object
178.19376 709.81143 225.44617 720.51846 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
200.37572 715.95496 m
188.98214 713.76945 182.15603 716.90230 178.19376 720.51846 C
178.39446 719.94161 178.60819 719.36844 178.83921 718.79981 C
182.08233 715.27748 187.83128 712.43320 198.02976 713.24816 C
210.61276 714.25389 218.06306 712.32406 222.46980 709.81143 C
223.57899 711.17291 224.57169 712.60356 225.44617 714.10422 C
220.62246 716.75263 212.84731 718.34683 200.37572 715.95496 C
@c
F

@rax %Note: Object
214.30091 736.86784 230.43855 763.37490 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
226.25490 755.18447 m
222.05764 736.86784 L
230.39490 745.85934 L
230.40595 749.94463 230.39915 754.03049 230.43798 758.11436 C
230.44706 758.85761 230.27131 759.27288 229.48866 759.53991 C
224.51896 761.24466 219.46337 762.56929 214.30091 763.37490 C
218.76917 751.22135 L
226.25490 755.18447 L
@c
F

@rax %Note: Object
176.18655 718.76494 212.50517 764.25165 @E
/$fm 1 def
 0 O 0 @g
0.0000 0.0000 0.0000  create_rgb_color set_solid_fill
198.06690 720.37247 m
183.58951 731.18268 L
188.62498 732.55578 L
183.93222 743.64831 L
194.23389 740.64359 L
195.12992 747.13833 L
204.65348 736.86784 L
200.45565 755.18447 L
207.94139 751.22135 L
212.50517 763.63370 L
211.25197 763.79896 209.99254 763.93389 208.72630 764.03452 C
198.00510 764.88350 187.61783 763.20028 177.49134 759.67937 C
176.51169 759.33666 176.17493 758.89984 176.18712 757.85981 C
176.24466 753.26485 176.24154 744.06926 176.24154 744.06926 C
176.24154 739.92671 176.19931 735.78387 176.25061 731.64104 C
176.28520 728.97109 176.61175 726.37228 177.21694 723.84746 C
180.88526 720.01843 187.35165 716.66816 198.06690 720.37247 C
@c
F

@rax %Note: Object
186.32069 720.93600 230.38724 761.97175 @E
/$fm 1 def
 0 O 0 @g
0.9294 0.1961 0.2157  create_rgb_color set_solid_fill
228.97672 722.77030 m
229.66214 725.45017 230.06466 728.29134 230.17124 731.29833 C
230.32006 735.47433 230.36825 739.65373 230.38724 743.83370 C
219.57449 732.17310 L
224.24882 752.57036 L
218.02337 749.27452 L
213.35528 761.97175 L
208.68718 749.27452 L
202.46202 752.57036 L
207.13635 732.17310 L
196.09285 744.08230 L
195.37569 738.88214 L
186.32069 741.52290 L
190.49953 731.64557 L
186.66340 730.59902 L
199.60441 720.93600 L
214.32898 726.61578 223.56510 724.96460 228.97672 722.77030 C
@c
F

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel18Dict 18.0 0
%%EOF
